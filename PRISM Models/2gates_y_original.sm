// This file was automatically generated by Visual DSD

ctmc

const int N =1;
const int MAX_AMOUNT = N;

// Parameters for reaction r_id67
const double k_r_id67 = 0.0035;

// Parameters for reaction r_id68
const double k_r_id68 = 0.0035;

// Parameters for reaction r_id69
const double k_r_id69 = 0.0535;

// Parameters for reaction r_id70
const double k_r_id70 = 0.0035;

// Parameters for reaction r_id71
const double k_r_id71 = 11.1;

// Parameters for reaction r_id72
const double k_r_id72 = 0.0535;

// Parameters for reaction r_id73
const double k_r_id73 = 0.0535;

// Parameters for reaction r_id74
const double k_r_id74 = 11.1;

// Parameters for reaction r_id75
const double k_r_id75 = 11.1;

// Parameters for reaction r_id76
const double k_r_id76 = 0.0535;

// Parameters for reaction r_id77
const double k_r_id77 = 0.0035;

// Parameters for reaction r_id78
const double k_r_id78 = 11.1;

// Parameters for reaction r_id79
const double k_r_id79 = 0.0535;

// Parameters for reaction r_id80
const double k_r_id80 = 0.0035;

// Parameters for reaction r_id81
const double k_r_id81 = 11.1;

// Parameters for reaction r_id82
const double k_r_id82 = 0.0035;

// Parameters for reaction r_id83
const double k_r_id83 = 0.0035;

// Parameters for reaction r_id84
const double k_r_id84 = 0.0535;

// Parameters for reaction r_id85
const double k_r_id85 = 0.0035;

// Parameters for reaction r_id86
const double k_r_id86 = 11.1;

// Parameters for reaction r_id87
const double k_r_id87 = 0.0535;

// Parameters for reaction r_id88
const double k_r_id88 = 0.0535;

// Parameters for reaction r_id89
const double k_r_id89 = 11.1;

// Parameters for reaction r_id90
const double k_r_id90 = 11.1;

// Parameters for reaction r_id91
const double k_r_id91 = 0.0535;

// Parameters for reaction r_id92
const double k_r_id92 = 0.0035;

// Parameters for reaction r_id93
const double k_r_id93 = 11.1;

// Parameters for reaction r_id94
const double k_r_id94 = 0.0035;

// Parameters for reaction r_id95
const double k_r_id95 = 11.1;

// Parameters for reaction r_id96
const double k_r_id96 = 0.0535;

// Parameters for reaction r_id97
const double k_r_id97 = 11.1;

// Parameters for reaction r_id98
const double k_r_id98 = 11.1;

// Parameters for reaction r_id99
const double k_r_id99 = 0.0535;

// Parameters for reaction r_id100
const double k_r_id100 = 11.1;

// Parameters for reaction r_id101
const double k_r_id101 = 11.1;

// Parameters for reaction r_id102
const double k_r_id102 = 0.0035;

// Parameters for reaction r_id103
const double k_r_id103 = 11.1;

// Parameters for reaction r_id104
const double k_r_id104 = 0.0535;

// Parameters for reaction r_id105
const double k_r_id105 = 11.1;

// Parameters for reaction r_id106
const double k_r_id106 = 11.1;

// Parameters for reaction r_id107
const double k_r_id107 = 0.0535;

// Parameters for reaction r_id108
const double k_r_id108 = 11.1;

// Parameters for reaction r_id109
const double k_r_id109 = 11.1;

// Parameters for reaction r_id110
const double k_r_id110 = 0.0035;

// Parameters for reaction r_id111
const double k_r_id111 = 0.0535;

// Parameters for reaction r_id112
const double k_r_id112 = 11.1;

// Parameters for reaction r_id113
const double k_r_id113 = 11.1;

// Parameters for reaction r_id114
const double k_r_id114 = 0.0035;

// Parameters for reaction r_id115
const double k_r_id115 = 11.1;

// Parameters for reaction r_id116
const double k_r_id116 = 0.0535;

// Parameters for reaction r_id117
const double k_r_id117 = 0.0035;

// Parameters for reaction r_id118
const double k_r_id118 = 11.1;

// Parameters for reaction r_id119
const double k_r_id119 = 0.0035;

// Parameters for reaction r_id120
const double k_r_id120 = 0.0035;

// Parameters for reaction r_id121
const double k_r_id121 = 0.0535;

// Parameters for reaction r_id122
const double k_r_id122 = 0.0035;

// Parameters for reaction r_id123
const double k_r_id123 = 11.1;

// Parameters for reaction r_id124
const double k_r_id124 = 0.0535;

// Parameters for reaction r_id125
const double k_r_id125 = 0.0535;

// Parameters for reaction r_id126
const double k_r_id126 = 11.1;

// Parameters for reaction r_id127
const double k_r_id127 = 11.1;

// Parameters for reaction r_id128
const double k_r_id128 = 0.0035;

// Parameters for reaction r_id129
const double k_r_id129 = 0.0035;

// Parameters for reaction r_id130
const double k_r_id130 = 0.0035;

// Parameters for reaction r_id131
const double k_r_id131 = 0.0535;

// Parameters for reaction r_id132
const double k_r_id132 = 0.0035;

// Parameters for reaction r_id133
const double k_r_id133 = 11.1;

// Parameters for reaction r_id134
const double k_r_id134 = 0.0535;

// Parameters for reaction r_id135
const double k_r_id135 = 0.0535;

// Parameters for reaction r_id136
const double k_r_id136 = 11.1;

// Parameters for reaction r_id137
const double k_r_id137 = 11.1;

// Parameters for reaction r_id138
const double k_r_id138 = 0.0035;

// Parameters for reaction r_id139
const double k_r_id139 = 0.0035;

// Parameters for reaction r_id140
const double k_r_id140 = 0.0035;

// Parameters for reaction r_id141
const double k_r_id141 = 0.0035;

// Parameters for reaction r_id142
const double k_r_id142 = 0.0035;

// Parameters for reaction r_id143
const double k_r_id143 = 0.0035;

// Parameters for reaction r_id144
const double k_r_id144 = 0.0535;

// Parameters for reaction r_id145
const double k_r_id145 = 0.0535;

// Parameters for reaction r_id146
const double k_r_id146 = 11.1;

// Parameters for reaction r_id147
const double k_r_id147 = 11.1;

// Parameters for reaction r_id148
const double k_r_id148 = 0.0535;

// Parameters for reaction r_id149
const double k_r_id149 = 0.0535;

// Parameters for reaction r_id150
const double k_r_id150 = 11.1;

// Parameters for reaction r_id151
const double k_r_id151 = 11.1;

// Parameters for reaction r_id152
const double k_r_id152 = 0.0535;

// Parameters for reaction r_id153
const double k_r_id153 = 0.0035;

// Parameters for reaction r_id154
const double k_r_id154 = 0.0035;

// Parameters for reaction r_id155
const double k_r_id155 = 11.1;

// Parameters for reaction r_id156
const double k_r_id156 = 0.0535;

// Parameters for reaction r_id157
const double k_r_id157 = 0.0535;

// Parameters for reaction r_id158
const double k_r_id158 = 11.1;

// Parameters for reaction r_id159
const double k_r_id159 = 11.1;

// Parameters for reaction r_id160
const double k_r_id160 = 0.0535;

// Parameters for reaction r_id161
const double k_r_id161 = 11.1;

// Parameters for reaction r_id162
const double k_r_id162 = 11.1;

// Parameters for reaction r_id163
const double k_r_id163 = 0.0535;

// Parameters for reaction r_id164
const double k_r_id164 = 11.1;

// Parameters for reaction r_id165
const double k_r_id165 = 11.1;

// Parameters for reaction r_id166
const double k_r_id166 = 0.0035;

// Parameters for reaction r_id167
const double k_r_id167 = 11.1;

// Parameters for reaction r_id168
const double k_r_id168 = 0.0535;

// Parameters for reaction r_id169
const double k_r_id169 = 0.0035;

// Parameters for reaction r_id170
const double k_r_id170 = 11.1;

// Parameters for reaction r_id171
const double k_r_id171 = 0.0035;

// Parameters for reaction r_id172
const double k_r_id172 = 0.0035;

// Parameters for reaction r_id173
const double k_r_id173 = 0.0035;

// Parameters for reaction r_id174
const double k_r_id174 = 0.0535;

// Parameters for reaction r_id175
const double k_r_id175 = 0.0035;

// Parameters for reaction r_id176
const double k_r_id176 = 0.0035;

// Parameters for reaction r_id177
const double k_r_id177 = 11.1;

// Parameters for reaction r_id178
const double k_r_id178 = 0.0535;

// Parameters for reaction r_id179
const double k_r_id179 = 0.0535;

// Parameters for reaction r_id180
const double k_r_id180 = 11.1;

// Parameters for reaction r_id181
const double k_r_id181 = 11.1;

// Parameters for reaction r_id182
const double k_r_id182 = 0.0535;

// Parameters for reaction r_id183
const double k_r_id183 = 0.0535;

// Parameters for reaction r_id184
const double k_r_id184 = 11.1;

// Parameters for reaction r_id185
const double k_r_id185 = 11.1;

// Parameters for reaction r_id186
const double k_r_id186 = 0.0535;

// Parameters for reaction r_id187
const double k_r_id187 = 0.0035;

// Parameters for reaction r_id188
const double k_r_id188 = 11.1;

// Parameters for reaction r_id189
const double k_r_id189 = 0.0035;

// Parameters for reaction r_id190
const double k_r_id190 = 0.0535;

// Parameters for reaction r_id191
const double k_r_id191 = 11.1;

// Parameters for reaction r_id192
const double k_r_id192 = 0.0535;

// Parameters for reaction r_id193
const double k_r_id193 = 11.1;

// Parameters for reaction r_id194
const double k_r_id194 = 0.0035;

// Parameters for reaction r_id195
const double k_r_id195 = 0.0035;

// Parameters for reaction r_id196
const double k_r_id196 = 0.0035;

// Parameters for reaction r_id197
const double k_r_id197 = 0.0535;

// Parameters for reaction r_id198
const double k_r_id198 = 0.0035;

// Parameters for reaction r_id199
const double k_r_id199 = 0.0035;

// Parameters for reaction r_id200
const double k_r_id200 = 11.1;

// Parameters for reaction r_id201
const double k_r_id201 = 0.0535;

// Parameters for reaction r_id202
const double k_r_id202 = 0.0535;

// Parameters for reaction r_id203
const double k_r_id203 = 11.1;

// Parameters for reaction r_id204
const double k_r_id204 = 11.1;

// Parameters for reaction r_id205
const double k_r_id205 = 0.0535;

// Parameters for reaction r_id206
const double k_r_id206 = 0.0035;

// Parameters for reaction r_id207
const double k_r_id207 = 0.0035;

// Parameters for reaction r_id208
const double k_r_id208 = 11.1;

// Parameters for reaction r_id209
const double k_r_id209 = 0.0535;

// Parameters for reaction r_id210
const double k_r_id210 = 0.0535;

// Parameters for reaction r_id211
const double k_r_id211 = 11.1;

// Parameters for reaction r_id212
const double k_r_id212 = 11.1;

// Parameters for reaction r_id213
const double k_r_id213 = 0.0035;

// Parameters for reaction r_id214
const double k_r_id214 = 0.0035;

// Parameters for reaction r_id215
const double k_r_id215 = 0.0535;

// Parameters for reaction r_id216
const double k_r_id216 = 0.0035;

// Parameters for reaction r_id217
const double k_r_id217 = 0.0035;

// Parameters for reaction r_id218
const double k_r_id218 = 11.1;

// Parameters for reaction r_id219
const double k_r_id219 = 0.0535;

// Parameters for reaction r_id220
const double k_r_id220 = 0.0535;

// Parameters for reaction r_id221
const double k_r_id221 = 11.1;

// Parameters for reaction r_id222
const double k_r_id222 = 11.1;

// Parameters for reaction r_id223
const double k_r_id223 = 0.0535;

// Parameters for reaction r_id224
const double k_r_id224 = 0.0035;

// Parameters for reaction r_id225
const double k_r_id225 = 0.0035;

// Parameters for reaction r_id226
const double k_r_id226 = 11.1;

// Parameters for reaction r_id227
const double k_r_id227 = 0.0535;

// Parameters for reaction r_id228
const double k_r_id228 = 0.0535;

// Parameters for reaction r_id229
const double k_r_id229 = 11.1;

// Parameters for reaction r_id230
const double k_r_id230 = 11.1;

// Parameters for reaction r_id231
const double k_r_id231 = 0.0035;

// Parameters for reaction r_id232
const double k_r_id232 = 0.0035;

// Parameters for reaction r_id233
const double k_r_id233 = 0.0535;

// Parameters for reaction r_id234
const double k_r_id234 = 0.0035;

// Parameters for reaction r_id235
const double k_r_id235 = 0.0035;

// Parameters for reaction r_id236
const double k_r_id236 = 11.1;

// Parameters for reaction r_id237
const double k_r_id237 = 0.0535;

// Parameters for reaction r_id238
const double k_r_id238 = 0.0535;

// Parameters for reaction r_id239
const double k_r_id239 = 11.1;

// Parameters for reaction r_id240
const double k_r_id240 = 11.1;

// Parameters for reaction r_id241
const double k_r_id241 = 0.0535;

// Parameters for reaction r_id242
const double k_r_id242 = 0.0035;

// Parameters for reaction r_id243
const double k_r_id243 = 0.0035;

// Parameters for reaction r_id244
const double k_r_id244 = 11.1;

// Parameters for reaction r_id245
const double k_r_id245 = 0.0535;

// Parameters for reaction r_id246
const double k_r_id246 = 0.0535;

// Parameters for reaction r_id247
const double k_r_id247 = 11.1;

// Parameters for reaction r_id248
const double k_r_id248 = 11.1;

// Species s_id0 (<p1^ p2^>)
const int s_id0_MIN = 0;
const int s_id0_MAX = MAX_AMOUNT;
module s_id0

    s_id0 : [s_id0_MIN..s_id0_MAX] init N; // Initial amount N

    // r_id67
    [r_id67] s_id0 > 0 -> (s_id0'=s_id0-1);
    // r_id69
    [r_id69] s_id0 <= s_id0_MAX-1 -> (s_id0'=s_id0+1);
    // r_id72
    [r_id72] s_id0 <= s_id0_MAX-1 -> (s_id0'=s_id0+1);
    // r_id77
    [r_id77] s_id0 > 0 -> (s_id0'=s_id0-1);
    // r_id80
    [r_id80] s_id0 > 0 -> (s_id0'=s_id0-1);
    // r_id82
    [r_id82] s_id0 > 0 -> (s_id0'=s_id0-1);
    // r_id84
    [r_id84] s_id0 <= s_id0_MAX-1 -> (s_id0'=s_id0+1);
    // r_id87
    [r_id87] s_id0 <= s_id0_MAX-1 -> (s_id0'=s_id0+1);
    // r_id92
    [r_id92] s_id0 > 0 -> (s_id0'=s_id0-1);
    // r_id94
    [r_id94] s_id0 > 0 -> (s_id0'=s_id0-1);
    // r_id96
    [r_id96] s_id0 <= s_id0_MAX-1 -> (s_id0'=s_id0+1);
    // r_id144
    [r_id144] s_id0 <= s_id0_MAX-1 -> (s_id0'=s_id0+1);

endmodule

// Species s_id1 (<q1^ q2^>)
const int s_id1_MIN = 0;
const int s_id1_MAX = MAX_AMOUNT;
module s_id1

    s_id1 : [s_id1_MIN..s_id1_MAX] init N; // Initial amount N

    // r_id68
    [r_id68] s_id1 > 0 -> (s_id1'=s_id1-1);
    // r_id70
    [r_id70] s_id1 > 0 -> (s_id1'=s_id1-1);
    // r_id73
    [r_id73] s_id1 <= s_id1_MAX-1 -> (s_id1'=s_id1+1);
    // r_id76
    [r_id76] s_id1 <= s_id1_MAX-1 -> (s_id1'=s_id1+1);
    // r_id163
    [r_id163] s_id1 <= s_id1_MAX-1 -> (s_id1'=s_id1+1);
    // r_id166
    [r_id166] s_id1 > 0 -> (s_id1'=s_id1-1);
    // r_id169
    [r_id169] s_id1 > 0 -> (s_id1'=s_id1-1);
    // r_id171
    [r_id171] s_id1 > 0 -> (s_id1'=s_id1-1);
    // r_id174
    [r_id174] s_id1 <= s_id1_MAX-1 -> (s_id1'=s_id1+1);
    // r_id179
    [r_id179] s_id1 <= s_id1_MAX-1 -> (s_id1'=s_id1+1);
    // r_id183
    [r_id183] s_id1 <= s_id1_MAX-1 -> (s_id1'=s_id1+1);
    // r_id187
    [r_id187] s_id1 > 0 -> (s_id1'=s_id1-1);

endmodule

// Species s_id2 (<x1^ x2^>)
const int s_id2_MIN = 0;
const int s_id2_MAX = MAX_AMOUNT;
module s_id2

    s_id2 : [s_id2_MIN..s_id2_MAX] init N; // Initial amount N

    // r_id102
    [r_id102] s_id2 > 0 -> (s_id2'=s_id2-1);
    // r_id104
    [r_id104] s_id2 <= s_id2_MAX-1 -> (s_id2'=s_id2+1);
    // r_id116
    [r_id116] s_id2 <= s_id2_MAX-1 -> (s_id2'=s_id2+1);
    // r_id119
    [r_id119] s_id2 > 0 -> (s_id2'=s_id2-1);
    // r_id122
    [r_id122] s_id2 > 0 -> (s_id2'=s_id2-1);
    // r_id124
    [r_id124] s_id2 <= s_id2_MAX-1 -> (s_id2'=s_id2+1);
    // r_id153
    [r_id153] s_id2 > 0 -> (s_id2'=s_id2-1);
    // r_id156
    [r_id156] s_id2 <= s_id2_MAX-1 -> (s_id2'=s_id2+1);
    // r_id168
    [r_id168] s_id2 <= s_id2_MAX-1 -> (s_id2'=s_id2+1);
    // r_id172
    [r_id172] s_id2 > 0 -> (s_id2'=s_id2-1);
    // r_id175
    [r_id175] s_id2 > 0 -> (s_id2'=s_id2-1);
    // r_id178
    [r_id178] s_id2 <= s_id2_MAX-1 -> (s_id2'=s_id2+1);

endmodule

// Species s_id3 (<z1^ z2^>)
const int s_id3_MIN = 0;
const int s_id3_MAX = MAX_AMOUNT;
module s_id3

    s_id3 : [s_id3_MIN..s_id3_MAX] init N; // Initial amount N

    // r_id83
    [r_id83] s_id3 > 0 -> (s_id3'=s_id3-1);
    // r_id85
    [r_id85] s_id3 > 0 -> (s_id3'=s_id3-1);
    // r_id88
    [r_id88] s_id3 <= s_id3_MAX-1 -> (s_id3'=s_id3+1);
    // r_id91
    [r_id91] s_id3 <= s_id3_MAX-1 -> (s_id3'=s_id3+1);
    // r_id111
    [r_id111] s_id3 <= s_id3_MAX-1 -> (s_id3'=s_id3+1);
    // r_id114
    [r_id114] s_id3 > 0 -> (s_id3'=s_id3-1);
    // r_id117
    [r_id117] s_id3 > 0 -> (s_id3'=s_id3-1);
    // r_id120
    [r_id120] s_id3 > 0 -> (s_id3'=s_id3-1);
    // r_id121
    [r_id121] s_id3 <= s_id3_MAX-1 -> (s_id3'=s_id3+1);
    // r_id125
    [r_id125] s_id3 <= s_id3_MAX-1 -> (s_id3'=s_id3+1);
    // r_id132
    [r_id132] s_id3 > 0 -> (s_id3'=s_id3-1);
    // r_id135
    [r_id135] s_id3 <= s_id3_MAX-1 -> (s_id3'=s_id3+1);

endmodule

// Species s_id4 (<p2^*>[p1^* x2^*]::[x1^* y^* z2^*]::[z1^* q2^*]<q1^*>)
const int s_id4_MIN = 0;
const int s_id4_MAX = MAX_AMOUNT;
module s_id4

    s_id4 : [s_id4_MIN..s_id4_MAX] init N; // Initial amount N

    // r_id67
    [r_id67] s_id4 > 0 -> (s_id4'=s_id4-1);
    // r_id68
    [r_id68] s_id4 > 0 -> (s_id4'=s_id4-1);
    // r_id69
    [r_id69] s_id4 <= s_id4_MAX-1 -> (s_id4'=s_id4+1);
    // r_id76
    [r_id76] s_id4 <= s_id4_MAX-1 -> (s_id4'=s_id4+1);

endmodule

// Species s_id5 ([p2^*]{p1^}::[p1^* x2^*]::[x1^* y^* z2^*]::[z1^* q2^*]<q1^*>)
const int s_id5_MIN = 0;
const int s_id5_MAX = MAX_AMOUNT;
module s_id5

    s_id5 : [s_id5_MIN..s_id5_MAX] init 0; // Initial amount 0

    // r_id67
    [r_id67] s_id5 <= s_id5_MAX-1 -> (s_id5'=s_id5+1);
    // r_id69
    [r_id69] s_id5 > 0 -> (s_id5'=s_id5-1);
    // r_id70
    [r_id70] s_id5 > 0 -> (s_id5'=s_id5-1);
    // r_id71
    [r_id71] s_id5 > 0 -> (s_id5'=s_id5-1);
    // r_id73
    [r_id73] s_id5 <= s_id5_MAX-1 -> (s_id5'=s_id5+1);
    // r_id188
    [r_id188] s_id5 <= s_id5_MAX-1 -> (s_id5'=s_id5+1);

endmodule

// Species s_id6 ([p2^*]{p1^}::[p1^* x2^*]::[x1^* y^* z2^*]::[z1^* q2^*]::{q2^}[q1^*])
const int s_id6_MIN = 0;
const int s_id6_MAX = MAX_AMOUNT;
module s_id6

    s_id6 : [s_id6_MIN..s_id6_MAX] init 0; // Initial amount 0

    // r_id70
    [r_id70] s_id6 <= s_id6_MAX-1 -> (s_id6'=s_id6+1);
    // r_id72
    [r_id72] s_id6 > 0 -> (s_id6'=s_id6-1);
    // r_id73
    [r_id73] s_id6 > 0 -> (s_id6'=s_id6-1);
    // r_id74
    [r_id74] s_id6 > 0 -> (s_id6'=s_id6-1);
    // r_id75
    [r_id75] s_id6 > 0 -> (s_id6'=s_id6-1);
    // r_id77
    [r_id77] s_id6 <= s_id6_MAX-1 -> (s_id6'=s_id6+1);
    // r_id147
    [r_id147] s_id6 <= s_id6_MAX-1 -> (s_id6'=s_id6+1);
    // r_id184
    [r_id184] s_id6 <= s_id6_MAX-1 -> (s_id6'=s_id6+1);

endmodule

// Species s_id7 (<p2^*>[p1^* x2^*]::[x1^* y^* z2^*]::[z1^* q2^*]::{q2^}[q1^*])
const int s_id7_MIN = 0;
const int s_id7_MAX = MAX_AMOUNT;
module s_id7

    s_id7 : [s_id7_MIN..s_id7_MAX] init 0; // Initial amount 0

    // r_id68
    [r_id68] s_id7 <= s_id7_MAX-1 -> (s_id7'=s_id7+1);
    // r_id72
    [r_id72] s_id7 <= s_id7_MAX-1 -> (s_id7'=s_id7+1);
    // r_id76
    [r_id76] s_id7 > 0 -> (s_id7'=s_id7-1);
    // r_id77
    [r_id77] s_id7 > 0 -> (s_id7'=s_id7-1);
    // r_id78
    [r_id78] s_id7 > 0 -> (s_id7'=s_id7-1);
    // r_id81
    [r_id81] s_id7 <= s_id7_MAX-1 -> (s_id7'=s_id7+1);

endmodule

// Species s_id8 (<p2^*>[p1^* x2^*]::[x1^* y^* z2^*]::[z1^*]{q2^}::[q2^* q1^*])
const int s_id8_MIN = 0;
const int s_id8_MAX = MAX_AMOUNT;
module s_id8

    s_id8 : [s_id8_MIN..s_id8_MAX] init 0; // Initial amount 0

    // r_id78
    [r_id78] s_id8 <= s_id8_MAX-1 -> (s_id8'=s_id8+1);
    // r_id79
    [r_id79] s_id8 > 0 -> (s_id8'=s_id8-1);
    // r_id80
    [r_id80] s_id8 > 0 -> (s_id8'=s_id8-1);
    // r_id81
    [r_id81] s_id8 > 0 -> (s_id8'=s_id8-1);
    // r_id138
    [r_id138] s_id8 <= s_id8_MAX-1 -> (s_id8'=s_id8+1);
    // r_id144
    [r_id144] s_id8 <= s_id8_MAX-1 -> (s_id8'=s_id8+1);

endmodule

// Species s_id9 (<p2^*>[p1^* x2^*]::[x1^* y^* z2^*]<z1^*>::[q2^* q1^*])
const int s_id9_MIN = 0;
const int s_id9_MAX = MAX_AMOUNT;
module s_id9

    s_id9 : [s_id9_MIN..s_id9_MAX] init 0; // Initial amount 0

    // r_id79
    [r_id79] s_id9 <= s_id9_MAX-1 -> (s_id9'=s_id9+1);
    // r_id82
    [r_id82] s_id9 > 0 -> (s_id9'=s_id9-1);
    // r_id83
    [r_id83] s_id9 > 0 -> (s_id9'=s_id9-1);
    // r_id84
    [r_id84] s_id9 <= s_id9_MAX-1 -> (s_id9'=s_id9+1);
    // r_id91
    [r_id91] s_id9 <= s_id9_MAX-1 -> (s_id9'=s_id9+1);
    // r_id138
    [r_id138] s_id9 > 0 -> (s_id9'=s_id9-1);

endmodule

// Species s_id10 ([p2^*]{p1^}::[p1^* x2^*]::[x1^* y^* z2^*]<z1^*>::[q2^* q1^*])
const int s_id10_MIN = 0;
const int s_id10_MAX = MAX_AMOUNT;
module s_id10

    s_id10 : [s_id10_MIN..s_id10_MAX] init 0; // Initial amount 0

    // r_id82
    [r_id82] s_id10 <= s_id10_MAX-1 -> (s_id10'=s_id10+1);
    // r_id84
    [r_id84] s_id10 > 0 -> (s_id10'=s_id10-1);
    // r_id85
    [r_id85] s_id10 > 0 -> (s_id10'=s_id10-1);
    // r_id86
    [r_id86] s_id10 > 0 -> (s_id10'=s_id10-1);
    // r_id88
    [r_id88] s_id10 <= s_id10_MAX-1 -> (s_id10'=s_id10+1);
    // r_id133
    [r_id133] s_id10 <= s_id10_MAX-1 -> (s_id10'=s_id10+1);
    // r_id139
    [r_id139] s_id10 > 0 -> (s_id10'=s_id10-1);
    // r_id145
    [r_id145] s_id10 <= s_id10_MAX-1 -> (s_id10'=s_id10+1);

endmodule

// Species s_id11 ([p2^*]{p1^}::[p1^* x2^*]::[x1^* y^* z2^*]::{z2^}[z1^*]::[q2^* q1^*])
const int s_id11_MIN = 0;
const int s_id11_MAX = MAX_AMOUNT;
module s_id11

    s_id11 : [s_id11_MIN..s_id11_MAX] init 0; // Initial amount 0

    // r_id85
    [r_id85] s_id11 <= s_id11_MAX-1 -> (s_id11'=s_id11+1);
    // r_id87
    [r_id87] s_id11 > 0 -> (s_id11'=s_id11-1);
    // r_id88
    [r_id88] s_id11 > 0 -> (s_id11'=s_id11-1);
    // r_id89
    [r_id89] s_id11 > 0 -> (s_id11'=s_id11-1);
    // r_id90
    [r_id90] s_id11 > 0 -> (s_id11'=s_id11-1);
    // r_id92
    [r_id92] s_id11 <= s_id11_MAX-1 -> (s_id11'=s_id11+1);
    // r_id98
    [r_id98] s_id11 <= s_id11_MAX-1 -> (s_id11'=s_id11+1);
    // r_id136
    [r_id136] s_id11 <= s_id11_MAX-1 -> (s_id11'=s_id11+1);

endmodule

// Species s_id12 (<p2^*>[p1^* x2^*]::[x1^* y^* z2^*]::{z2^}[z1^*]::[q2^* q1^*])
const int s_id12_MIN = 0;
const int s_id12_MAX = MAX_AMOUNT;
module s_id12

    s_id12 : [s_id12_MIN..s_id12_MAX] init 0; // Initial amount 0

    // r_id83
    [r_id83] s_id12 <= s_id12_MAX-1 -> (s_id12'=s_id12+1);
    // r_id87
    [r_id87] s_id12 <= s_id12_MAX-1 -> (s_id12'=s_id12+1);
    // r_id91
    [r_id91] s_id12 > 0 -> (s_id12'=s_id12-1);
    // r_id92
    [r_id92] s_id12 > 0 -> (s_id12'=s_id12-1);
    // r_id93
    [r_id93] s_id12 > 0 -> (s_id12'=s_id12-1);
    // r_id95
    [r_id95] s_id12 <= s_id12_MAX-1 -> (s_id12'=s_id12+1);

endmodule

// Species s_id13 (<p2^*>[p1^* x2^*]::[x1^* y^*]{z2^}::[z2^* z1^*]::[q2^* q1^*])
const int s_id13_MIN = 0;
const int s_id13_MAX = MAX_AMOUNT;
module s_id13

    s_id13 : [s_id13_MIN..s_id13_MAX] init 0; // Initial amount 0

    // r_id93
    [r_id93] s_id13 <= s_id13_MAX-1 -> (s_id13'=s_id13+1);
    // r_id94
    [r_id94] s_id13 > 0 -> (s_id13'=s_id13-1);
    // r_id95
    [r_id95] s_id13 > 0 -> (s_id13'=s_id13-1);
    // r_id96
    [r_id96] s_id13 <= s_id13_MAX-1 -> (s_id13'=s_id13+1);

endmodule

// Species s_id14 ([p2^*]{p1^}::[p1^* x2^*]::[x1^* y^*]{z2^}::[z2^* z1^*]::[q2^* q1^*])
const int s_id14_MIN = 0;
const int s_id14_MAX = MAX_AMOUNT;
module s_id14

    s_id14 : [s_id14_MIN..s_id14_MAX] init 0; // Initial amount 0

    // r_id90
    [r_id90] s_id14 <= s_id14_MAX-1 -> (s_id14'=s_id14+1);
    // r_id94
    [r_id94] s_id14 <= s_id14_MAX-1 -> (s_id14'=s_id14+1);
    // r_id96
    [r_id96] s_id14 > 0 -> (s_id14'=s_id14-1);
    // r_id97
    [r_id97] s_id14 > 0 -> (s_id14'=s_id14-1);
    // r_id98
    [r_id98] s_id14 > 0 -> (s_id14'=s_id14-1);
    // r_id100
    [r_id100] s_id14 <= s_id14_MAX-1 -> (s_id14'=s_id14+1);

endmodule

// Species s_id15 ([p2^* p1^*]::{p1^}[x2^*]::[x1^* y^*]{z2^}::[z2^* z1^*]::[q2^* q1^*])
const int s_id15_MIN = 0;
const int s_id15_MAX = MAX_AMOUNT;
module s_id15

    s_id15 : [s_id15_MIN..s_id15_MAX] init 0; // Initial amount 0

    // r_id97
    [r_id97] s_id15 <= s_id15_MAX-1 -> (s_id15'=s_id15+1);
    // r_id99
    [r_id99] s_id15 > 0 -> (s_id15'=s_id15-1);
    // r_id100
    [r_id100] s_id15 > 0 -> (s_id15'=s_id15-1);
    // r_id101
    [r_id101] s_id15 > 0 -> (s_id15'=s_id15-1);
    // r_id128
    [r_id128] s_id15 <= s_id15_MAX-1 -> (s_id15'=s_id15+1);
    // r_id137
    [r_id137] s_id15 <= s_id15_MAX-1 -> (s_id15'=s_id15+1);

endmodule

// Species s_id16 ([p2^* p1^*]<x2^*>::[x1^* y^*]{z2^}::[z2^* z1^*]::[q2^* q1^*])
const int s_id16_MIN = 0;
const int s_id16_MAX = MAX_AMOUNT;
module s_id16

    s_id16 : [s_id16_MIN..s_id16_MAX] init 0; // Initial amount 0

    // r_id99
    [r_id99] s_id16 <= s_id16_MAX-1 -> (s_id16'=s_id16+1);
    // r_id102
    [r_id102] s_id16 > 0 -> (s_id16'=s_id16-1);
    // r_id103
    [r_id103] s_id16 > 0 -> (s_id16'=s_id16-1);
    // r_id104
    [r_id104] s_id16 <= s_id16_MAX-1 -> (s_id16'=s_id16+1);
    // r_id123
    [r_id123] s_id16 <= s_id16_MAX-1 -> (s_id16'=s_id16+1);
    // r_id128
    [r_id128] s_id16 > 0 -> (s_id16'=s_id16-1);

endmodule

// Species s_id17 ([p2^* p1^*]::[x2^*]{x1^}::[x1^* y^*]{z2^}::[z2^* z1^*]::[q2^* q1^*])
const int s_id17_MIN = 0;
const int s_id17_MAX = MAX_AMOUNT;
module s_id17

    s_id17 : [s_id17_MIN..s_id17_MAX] init 0; // Initial amount 0

    // r_id102
    [r_id102] s_id17 <= s_id17_MAX-1 -> (s_id17'=s_id17+1);
    // r_id104
    [r_id104] s_id17 > 0 -> (s_id17'=s_id17-1);
    // r_id105
    [r_id105] s_id17 > 0 -> (s_id17'=s_id17-1);
    // r_id106
    [r_id106] s_id17 > 0 -> (s_id17'=s_id17-1);
    // r_id108
    [r_id108] s_id17 <= s_id17_MAX-1 -> (s_id17'=s_id17+1);
    // r_id127
    [r_id127] s_id17 <= s_id17_MAX-1 -> (s_id17'=s_id17+1);

endmodule

// Species s_id18 ([p2^* p1^*]::[x2^* x1^*]::{x1^}[y^*]{z2^}::[z2^* z1^*]::[q2^* q1^*])
const int s_id18_MIN = 0;
const int s_id18_MAX = MAX_AMOUNT;
module s_id18

    s_id18 : [s_id18_MIN..s_id18_MAX] init 0; // Initial amount 0

    // r_id105
    [r_id105] s_id18 <= s_id18_MAX-1 -> (s_id18'=s_id18+1);
    // r_id107
    [r_id107] s_id18 > 0 -> (s_id18'=s_id18-1);
    // r_id108
    [r_id108] s_id18 > 0 -> (s_id18'=s_id18-1);
    // r_id109
    [r_id109] s_id18 > 0 -> (s_id18'=s_id18-1);
    // r_id110
    [r_id110] s_id18 <= s_id18_MAX-1 -> (s_id18'=s_id18+1);
    // r_id113
    [r_id113] s_id18 <= s_id18_MAX-1 -> (s_id18'=s_id18+1);

endmodule

// Species s_id19 ([p2^* p1^*]::[x2^* x1^*]<y^*>::[z2^* z1^*]::[q2^* q1^*])
const int s_id19_MIN = 0;
const int s_id19_MAX = MAX_AMOUNT;
module s_id19

    s_id19 : [s_id19_MIN..s_id19_MAX] init 0; // Initial amount 0

    // r_id107
    [r_id107] s_id19 <= s_id19_MAX-1 -> (s_id19'=s_id19+1);
    // r_id110
    [r_id110] s_id19 > 0 -> (s_id19'=s_id19-1);

endmodule

// Species s_id20 ({x1^ y^ z2^})
const int s_id20_MIN = 0;
const int s_id20_MAX = MAX_AMOUNT;
module s_id20

    s_id20 : [s_id20_MIN..s_id20_MAX] init 0; // Initial amount 0

    // r_id107
    [r_id107] s_id20 <= s_id20_MAX-1 -> (s_id20'=s_id20+1);
    // r_id110
    [r_id110] s_id20 > 0 -> (s_id20'=s_id20-1);
    // r_id189
    [r_id189] s_id20 > 0 -> (s_id20'=s_id20-1);
    // r_id190
    [r_id190] s_id20 <= s_id20_MAX-1 -> (s_id20'=s_id20+1);

endmodule

// Species s_id21 ([p2^* p1^*]::[x2^* x1^*]::{x1^}[y^* z2^*]::{z2^}[z1^*]::[q2^* q1^*])
const int s_id21_MIN = 0;
const int s_id21_MAX = MAX_AMOUNT;
module s_id21

    s_id21 : [s_id21_MIN..s_id21_MAX] init 0; // Initial amount 0

    // r_id109
    [r_id109] s_id21 <= s_id21_MAX-1 -> (s_id21'=s_id21+1);
    // r_id111
    [r_id111] s_id21 > 0 -> (s_id21'=s_id21-1);
    // r_id112
    [r_id112] s_id21 > 0 -> (s_id21'=s_id21-1);
    // r_id113
    [r_id113] s_id21 > 0 -> (s_id21'=s_id21-1);
    // r_id114
    [r_id114] s_id21 <= s_id21_MAX-1 -> (s_id21'=s_id21+1);
    // r_id126
    [r_id126] s_id21 <= s_id21_MAX-1 -> (s_id21'=s_id21+1);

endmodule

// Species s_id22 ([p2^* p1^*]::[x2^* x1^*]::{x1^}[y^* z2^*]<z1^*>::[q2^* q1^*])
const int s_id22_MIN = 0;
const int s_id22_MAX = MAX_AMOUNT;
module s_id22

    s_id22 : [s_id22_MIN..s_id22_MAX] init 0; // Initial amount 0

    // r_id111
    [r_id111] s_id22 <= s_id22_MAX-1 -> (s_id22'=s_id22+1);
    // r_id114
    [r_id114] s_id22 > 0 -> (s_id22'=s_id22-1);
    // r_id115
    [r_id115] s_id22 > 0 -> (s_id22'=s_id22-1);
    // r_id118
    [r_id118] s_id22 <= s_id22_MAX-1 -> (s_id22'=s_id22+1);
    // r_id140
    [r_id140] s_id22 > 0 -> (s_id22'=s_id22-1);
    // r_id160
    [r_id160] s_id22 <= s_id22_MAX-1 -> (s_id22'=s_id22+1);

endmodule

// Species s_id23 ([p2^* p1^*]::[x2^*]{x1^}::[x1^* y^* z2^*]<z1^*>::[q2^* q1^*])
const int s_id23_MIN = 0;
const int s_id23_MAX = MAX_AMOUNT;
module s_id23

    s_id23 : [s_id23_MIN..s_id23_MAX] init 0; // Initial amount 0

    // r_id115
    [r_id115] s_id23 <= s_id23_MAX-1 -> (s_id23'=s_id23+1);
    // r_id116
    [r_id116] s_id23 > 0 -> (s_id23'=s_id23-1);
    // r_id117
    [r_id117] s_id23 > 0 -> (s_id23'=s_id23-1);
    // r_id118
    [r_id118] s_id23 > 0 -> (s_id23'=s_id23-1);
    // r_id119
    [r_id119] s_id23 <= s_id23_MAX-1 -> (s_id23'=s_id23+1);
    // r_id125
    [r_id125] s_id23 <= s_id23_MAX-1 -> (s_id23'=s_id23+1);
    // r_id141
    [r_id141] s_id23 > 0 -> (s_id23'=s_id23-1);
    // r_id157
    [r_id157] s_id23 <= s_id23_MAX-1 -> (s_id23'=s_id23+1);

endmodule

// Species s_id24 ([p2^* p1^*]<x2^*>::[x1^* y^* z2^*]<z1^*>::[q2^* q1^*])
const int s_id24_MIN = 0;
const int s_id24_MAX = MAX_AMOUNT;
module s_id24

    s_id24 : [s_id24_MIN..s_id24_MAX] init 0; // Initial amount 0

    // r_id116
    [r_id116] s_id24 <= s_id24_MAX-1 -> (s_id24'=s_id24+1);
    // r_id119
    [r_id119] s_id24 > 0 -> (s_id24'=s_id24-1);
    // r_id120
    [r_id120] s_id24 > 0 -> (s_id24'=s_id24-1);
    // r_id121
    [r_id121] s_id24 <= s_id24_MAX-1 -> (s_id24'=s_id24+1);
    // r_id129
    [r_id129] s_id24 > 0 -> (s_id24'=s_id24-1);
    // r_id131
    [r_id131] s_id24 <= s_id24_MAX-1 -> (s_id24'=s_id24+1);
    // r_id142
    [r_id142] s_id24 > 0 -> (s_id24'=s_id24-1);
    // r_id152
    [r_id152] s_id24 <= s_id24_MAX-1 -> (s_id24'=s_id24+1);

endmodule

// Species s_id25 ([p2^* p1^*]<x2^*>::[x1^* y^* z2^*]::{z2^}[z1^*]::[q2^* q1^*])
const int s_id25_MIN = 0;
const int s_id25_MAX = MAX_AMOUNT;
module s_id25

    s_id25 : [s_id25_MIN..s_id25_MAX] init 0; // Initial amount 0

    // r_id103
    [r_id103] s_id25 <= s_id25_MAX-1 -> (s_id25'=s_id25+1);
    // r_id120
    [r_id120] s_id25 <= s_id25_MAX-1 -> (s_id25'=s_id25+1);
    // r_id121
    [r_id121] s_id25 > 0 -> (s_id25'=s_id25-1);
    // r_id122
    [r_id122] s_id25 > 0 -> (s_id25'=s_id25-1);
    // r_id123
    [r_id123] s_id25 > 0 -> (s_id25'=s_id25-1);
    // r_id124
    [r_id124] s_id25 <= s_id25_MAX-1 -> (s_id25'=s_id25+1);
    // r_id130
    [r_id130] s_id25 > 0 -> (s_id25'=s_id25-1);
    // r_id134
    [r_id134] s_id25 <= s_id25_MAX-1 -> (s_id25'=s_id25+1);

endmodule

// Species s_id26 ([p2^* p1^*]::[x2^*]{x1^}::[x1^* y^* z2^*]::{z2^}[z1^*]::[q2^* q1^*])
const int s_id26_MIN = 0;
const int s_id26_MAX = MAX_AMOUNT;
module s_id26

    s_id26 : [s_id26_MIN..s_id26_MAX] init 0; // Initial amount 0

    // r_id106
    [r_id106] s_id26 <= s_id26_MAX-1 -> (s_id26'=s_id26+1);
    // r_id112
    [r_id112] s_id26 <= s_id26_MAX-1 -> (s_id26'=s_id26+1);
    // r_id117
    [r_id117] s_id26 <= s_id26_MAX-1 -> (s_id26'=s_id26+1);
    // r_id122
    [r_id122] s_id26 <= s_id26_MAX-1 -> (s_id26'=s_id26+1);
    // r_id124
    [r_id124] s_id26 > 0 -> (s_id26'=s_id26-1);
    // r_id125
    [r_id125] s_id26 > 0 -> (s_id26'=s_id26-1);
    // r_id126
    [r_id126] s_id26 > 0 -> (s_id26'=s_id26-1);
    // r_id127
    [r_id127] s_id26 > 0 -> (s_id26'=s_id26-1);

endmodule

// Species s_id27 ({p1^ x2^})
const int s_id27_MIN = 0;
const int s_id27_MAX = MAX_AMOUNT;
module s_id27

    s_id27 : [s_id27_MIN..s_id27_MAX] init 0; // Initial amount 0

    // r_id99
    [r_id99] s_id27 <= s_id27_MAX-1 -> (s_id27'=s_id27+1);
    // r_id128
    [r_id128] s_id27 > 0 -> (s_id27'=s_id27-1);
    // r_id129
    [r_id129] s_id27 > 0 -> (s_id27'=s_id27-1);
    // r_id130
    [r_id130] s_id27 > 0 -> (s_id27'=s_id27-1);
    // r_id131
    [r_id131] s_id27 <= s_id27_MAX-1 -> (s_id27'=s_id27+1);
    // r_id134
    [r_id134] s_id27 <= s_id27_MAX-1 -> (s_id27'=s_id27+1);
    // r_id148
    [r_id148] s_id27 <= s_id27_MAX-1 -> (s_id27'=s_id27+1);
    // r_id154
    [r_id154] s_id27 > 0 -> (s_id27'=s_id27-1);
    // r_id173
    [r_id173] s_id27 > 0 -> (s_id27'=s_id27-1);
    // r_id176
    [r_id176] s_id27 > 0 -> (s_id27'=s_id27-1);
    // r_id182
    [r_id182] s_id27 <= s_id27_MAX-1 -> (s_id27'=s_id27+1);
    // r_id186
    [r_id186] s_id27 <= s_id27_MAX-1 -> (s_id27'=s_id27+1);
    // r_id195
    [r_id195] s_id27 > 0 -> (s_id27'=s_id27-1);
    // r_id196
    [r_id196] s_id27 > 0 -> (s_id27'=s_id27-1);
    // r_id197
    [r_id197] s_id27 <= s_id27_MAX-1 -> (s_id27'=s_id27+1);
    // r_id198
    [r_id198] s_id27 > 0 -> (s_id27'=s_id27-1);
    // r_id201
    [r_id201] s_id27 <= s_id27_MAX-1 -> (s_id27'=s_id27+1);
    // r_id202
    [r_id202] s_id27 <= s_id27_MAX-1 -> (s_id27'=s_id27+1);
    // r_id203
    [r_id203] s_id27 <= s_id27_MAX-1 -> (s_id27'=s_id27+1);
    // r_id204
    [r_id204] s_id27 <= s_id27_MAX-1 -> (s_id27'=s_id27+1);
    // r_id205
    [r_id205] s_id27 <= s_id27_MAX-1 -> (s_id27'=s_id27+1);
    // r_id206
    [r_id206] s_id27 > 0 -> (s_id27'=s_id27-1);

endmodule

// Species s_id28 ([p2^* p1^*]::{p1^}[x2^*]::[x1^* y^* z2^*]<z1^*>::[q2^* q1^*])
const int s_id28_MIN = 0;
const int s_id28_MAX = MAX_AMOUNT;
module s_id28

    s_id28 : [s_id28_MIN..s_id28_MAX] init 0; // Initial amount 0

    // r_id86
    [r_id86] s_id28 <= s_id28_MAX-1 -> (s_id28'=s_id28+1);
    // r_id129
    [r_id129] s_id28 <= s_id28_MAX-1 -> (s_id28'=s_id28+1);
    // r_id131
    [r_id131] s_id28 > 0 -> (s_id28'=s_id28-1);
    // r_id132
    [r_id132] s_id28 > 0 -> (s_id28'=s_id28-1);
    // r_id133
    [r_id133] s_id28 > 0 -> (s_id28'=s_id28-1);
    // r_id135
    [r_id135] s_id28 <= s_id28_MAX-1 -> (s_id28'=s_id28+1);
    // r_id143
    [r_id143] s_id28 > 0 -> (s_id28'=s_id28-1);
    // r_id149
    [r_id149] s_id28 <= s_id28_MAX-1 -> (s_id28'=s_id28+1);

endmodule

// Species s_id29 ([p2^* p1^*]::{p1^}[x2^*]::[x1^* y^* z2^*]::{z2^}[z1^*]::[q2^* q1^*])
const int s_id29_MIN = 0;
const int s_id29_MAX = MAX_AMOUNT;
module s_id29

    s_id29 : [s_id29_MIN..s_id29_MAX] init 0; // Initial amount 0

    // r_id89
    [r_id89] s_id29 <= s_id29_MAX-1 -> (s_id29'=s_id29+1);
    // r_id101
    [r_id101] s_id29 <= s_id29_MAX-1 -> (s_id29'=s_id29+1);
    // r_id130
    [r_id130] s_id29 <= s_id29_MAX-1 -> (s_id29'=s_id29+1);
    // r_id132
    [r_id132] s_id29 <= s_id29_MAX-1 -> (s_id29'=s_id29+1);
    // r_id134
    [r_id134] s_id29 > 0 -> (s_id29'=s_id29-1);
    // r_id135
    [r_id135] s_id29 > 0 -> (s_id29'=s_id29-1);
    // r_id136
    [r_id136] s_id29 > 0 -> (s_id29'=s_id29-1);
    // r_id137
    [r_id137] s_id29 > 0 -> (s_id29'=s_id29-1);

endmodule

// Species s_id30 ({z1^ q2^})
const int s_id30_MIN = 0;
const int s_id30_MAX = MAX_AMOUNT;
module s_id30

    s_id30 : [s_id30_MIN..s_id30_MAX] init 0; // Initial amount 0

    // r_id79
    [r_id79] s_id30 <= s_id30_MAX-1 -> (s_id30'=s_id30+1);
    // r_id138
    [r_id138] s_id30 > 0 -> (s_id30'=s_id30-1);
    // r_id139
    [r_id139] s_id30 > 0 -> (s_id30'=s_id30-1);
    // r_id140
    [r_id140] s_id30 > 0 -> (s_id30'=s_id30-1);
    // r_id141
    [r_id141] s_id30 > 0 -> (s_id30'=s_id30-1);
    // r_id142
    [r_id142] s_id30 > 0 -> (s_id30'=s_id30-1);
    // r_id143
    [r_id143] s_id30 > 0 -> (s_id30'=s_id30-1);
    // r_id145
    [r_id145] s_id30 <= s_id30_MAX-1 -> (s_id30'=s_id30+1);
    // r_id149
    [r_id149] s_id30 <= s_id30_MAX-1 -> (s_id30'=s_id30+1);
    // r_id152
    [r_id152] s_id30 <= s_id30_MAX-1 -> (s_id30'=s_id30+1);
    // r_id157
    [r_id157] s_id30 <= s_id30_MAX-1 -> (s_id30'=s_id30+1);
    // r_id160
    [r_id160] s_id30 <= s_id30_MAX-1 -> (s_id30'=s_id30+1);
    // r_id213
    [r_id213] s_id30 > 0 -> (s_id30'=s_id30-1);
    // r_id214
    [r_id214] s_id30 > 0 -> (s_id30'=s_id30-1);
    // r_id215
    [r_id215] s_id30 <= s_id30_MAX-1 -> (s_id30'=s_id30+1);
    // r_id216
    [r_id216] s_id30 > 0 -> (s_id30'=s_id30-1);
    // r_id219
    [r_id219] s_id30 <= s_id30_MAX-1 -> (s_id30'=s_id30+1);
    // r_id220
    [r_id220] s_id30 <= s_id30_MAX-1 -> (s_id30'=s_id30+1);
    // r_id221
    [r_id221] s_id30 <= s_id30_MAX-1 -> (s_id30'=s_id30+1);
    // r_id222
    [r_id222] s_id30 <= s_id30_MAX-1 -> (s_id30'=s_id30+1);
    // r_id223
    [r_id223] s_id30 <= s_id30_MAX-1 -> (s_id30'=s_id30+1);
    // r_id224
    [r_id224] s_id30 > 0 -> (s_id30'=s_id30-1);

endmodule

// Species s_id31 ([p2^*]{p1^}::[p1^* x2^*]::[x1^* y^* z2^*]::[z1^*]{q2^}::[q2^* q1^*])
const int s_id31_MIN = 0;
const int s_id31_MAX = MAX_AMOUNT;
module s_id31

    s_id31 : [s_id31_MIN..s_id31_MAX] init 0; // Initial amount 0

    // r_id75
    [r_id75] s_id31 <= s_id31_MAX-1 -> (s_id31'=s_id31+1);
    // r_id80
    [r_id80] s_id31 <= s_id31_MAX-1 -> (s_id31'=s_id31+1);
    // r_id139
    [r_id139] s_id31 <= s_id31_MAX-1 -> (s_id31'=s_id31+1);
    // r_id144
    [r_id144] s_id31 > 0 -> (s_id31'=s_id31-1);
    // r_id145
    [r_id145] s_id31 > 0 -> (s_id31'=s_id31-1);
    // r_id146
    [r_id146] s_id31 > 0 -> (s_id31'=s_id31-1);
    // r_id147
    [r_id147] s_id31 > 0 -> (s_id31'=s_id31-1);
    // r_id150
    [r_id150] s_id31 <= s_id31_MAX-1 -> (s_id31'=s_id31+1);

endmodule

// Species s_id32 ([p2^* p1^*]::{p1^}[x2^*]::[x1^* y^* z2^*]::[z1^*]{q2^}::[q2^* q1^*])
const int s_id32_MIN = 0;
const int s_id32_MAX = MAX_AMOUNT;
module s_id32

    s_id32 : [s_id32_MIN..s_id32_MAX] init 0; // Initial amount 0

    // r_id143
    [r_id143] s_id32 <= s_id32_MAX-1 -> (s_id32'=s_id32+1);
    // r_id146
    [r_id146] s_id32 <= s_id32_MAX-1 -> (s_id32'=s_id32+1);
    // r_id148
    [r_id148] s_id32 > 0 -> (s_id32'=s_id32-1);
    // r_id149
    [r_id149] s_id32 > 0 -> (s_id32'=s_id32-1);
    // r_id150
    [r_id150] s_id32 > 0 -> (s_id32'=s_id32-1);
    // r_id151
    [r_id151] s_id32 > 0 -> (s_id32'=s_id32-1);
    // r_id154
    [r_id154] s_id32 <= s_id32_MAX-1 -> (s_id32'=s_id32+1);
    // r_id185
    [r_id185] s_id32 <= s_id32_MAX-1 -> (s_id32'=s_id32+1);

endmodule

// Species s_id33 ([p2^* p1^*]<x2^*>::[x1^* y^* z2^*]::[z1^*]{q2^}::[q2^* q1^*])
const int s_id33_MIN = 0;
const int s_id33_MAX = MAX_AMOUNT;
module s_id33

    s_id33 : [s_id33_MIN..s_id33_MAX] init 0; // Initial amount 0

    // r_id142
    [r_id142] s_id33 <= s_id33_MAX-1 -> (s_id33'=s_id33+1);
    // r_id148
    [r_id148] s_id33 <= s_id33_MAX-1 -> (s_id33'=s_id33+1);
    // r_id152
    [r_id152] s_id33 > 0 -> (s_id33'=s_id33-1);
    // r_id153
    [r_id153] s_id33 > 0 -> (s_id33'=s_id33-1);
    // r_id154
    [r_id154] s_id33 > 0 -> (s_id33'=s_id33-1);
    // r_id155
    [r_id155] s_id33 > 0 -> (s_id33'=s_id33-1);
    // r_id156
    [r_id156] s_id33 <= s_id33_MAX-1 -> (s_id33'=s_id33+1);
    // r_id177
    [r_id177] s_id33 <= s_id33_MAX-1 -> (s_id33'=s_id33+1);

endmodule

// Species s_id34 ([p2^* p1^*]::[x2^*]{x1^}::[x1^* y^* z2^*]::[z1^*]{q2^}::[q2^* q1^*])
const int s_id34_MIN = 0;
const int s_id34_MAX = MAX_AMOUNT;
module s_id34

    s_id34 : [s_id34_MIN..s_id34_MAX] init 0; // Initial amount 0

    // r_id141
    [r_id141] s_id34 <= s_id34_MAX-1 -> (s_id34'=s_id34+1);
    // r_id153
    [r_id153] s_id34 <= s_id34_MAX-1 -> (s_id34'=s_id34+1);
    // r_id156
    [r_id156] s_id34 > 0 -> (s_id34'=s_id34-1);
    // r_id157
    [r_id157] s_id34 > 0 -> (s_id34'=s_id34-1);
    // r_id158
    [r_id158] s_id34 > 0 -> (s_id34'=s_id34-1);
    // r_id159
    [r_id159] s_id34 > 0 -> (s_id34'=s_id34-1);
    // r_id161
    [r_id161] s_id34 <= s_id34_MAX-1 -> (s_id34'=s_id34+1);
    // r_id181
    [r_id181] s_id34 <= s_id34_MAX-1 -> (s_id34'=s_id34+1);

endmodule

// Species s_id35 ([p2^* p1^*]::[x2^* x1^*]::{x1^}[y^* z2^*]::[z1^*]{q2^}::[q2^* q1^*])
const int s_id35_MIN = 0;
const int s_id35_MAX = MAX_AMOUNT;
module s_id35

    s_id35 : [s_id35_MIN..s_id35_MAX] init 0; // Initial amount 0

    // r_id140
    [r_id140] s_id35 <= s_id35_MAX-1 -> (s_id35'=s_id35+1);
    // r_id158
    [r_id158] s_id35 <= s_id35_MAX-1 -> (s_id35'=s_id35+1);
    // r_id160
    [r_id160] s_id35 > 0 -> (s_id35'=s_id35-1);
    // r_id161
    [r_id161] s_id35 > 0 -> (s_id35'=s_id35-1);
    // r_id162
    [r_id162] s_id35 > 0 -> (s_id35'=s_id35-1);
    // r_id165
    [r_id165] s_id35 <= s_id35_MAX-1 -> (s_id35'=s_id35+1);

endmodule

// Species s_id36 ([p2^* p1^*]::[x2^* x1^*]::{x1^}[y^* z2^*]::[z1^* q2^*]::{q2^}[q1^*])
const int s_id36_MIN = 0;
const int s_id36_MAX = MAX_AMOUNT;
module s_id36

    s_id36 : [s_id36_MIN..s_id36_MAX] init 0; // Initial amount 0

    // r_id162
    [r_id162] s_id36 <= s_id36_MAX-1 -> (s_id36'=s_id36+1);
    // r_id163
    [r_id163] s_id36 > 0 -> (s_id36'=s_id36-1);
    // r_id164
    [r_id164] s_id36 > 0 -> (s_id36'=s_id36-1);
    // r_id165
    [r_id165] s_id36 > 0 -> (s_id36'=s_id36-1);
    // r_id166
    [r_id166] s_id36 <= s_id36_MAX-1 -> (s_id36'=s_id36+1);
    // r_id180
    [r_id180] s_id36 <= s_id36_MAX-1 -> (s_id36'=s_id36+1);

endmodule

// Species s_id37 ([p2^* p1^*]::[x2^* x1^*]::{x1^}[y^* z2^*]::[z1^* q2^*]<q1^*>)
const int s_id37_MIN = 0;
const int s_id37_MAX = MAX_AMOUNT;
module s_id37

    s_id37 : [s_id37_MIN..s_id37_MAX] init 0; // Initial amount 0

    // r_id163
    [r_id163] s_id37 <= s_id37_MAX-1 -> (s_id37'=s_id37+1);
    // r_id166
    [r_id166] s_id37 > 0 -> (s_id37'=s_id37-1);
    // r_id167
    [r_id167] s_id37 > 0 -> (s_id37'=s_id37-1);
    // r_id170
    [r_id170] s_id37 <= s_id37_MAX-1 -> (s_id37'=s_id37+1);

endmodule

// Species s_id38 ([p2^* p1^*]::[x2^*]{x1^}::[x1^* y^* z2^*]::[z1^* q2^*]<q1^*>)
const int s_id38_MIN = 0;
const int s_id38_MAX = MAX_AMOUNT;
module s_id38

    s_id38 : [s_id38_MIN..s_id38_MAX] init 0; // Initial amount 0

    // r_id167
    [r_id167] s_id38 <= s_id38_MAX-1 -> (s_id38'=s_id38+1);
    // r_id168
    [r_id168] s_id38 > 0 -> (s_id38'=s_id38-1);
    // r_id169
    [r_id169] s_id38 > 0 -> (s_id38'=s_id38-1);
    // r_id170
    [r_id170] s_id38 > 0 -> (s_id38'=s_id38-1);
    // r_id172
    [r_id172] s_id38 <= s_id38_MAX-1 -> (s_id38'=s_id38+1);
    // r_id179
    [r_id179] s_id38 <= s_id38_MAX-1 -> (s_id38'=s_id38+1);

endmodule

// Species s_id39 ([p2^* p1^*]<x2^*>::[x1^* y^* z2^*]::[z1^* q2^*]<q1^*>)
const int s_id39_MIN = 0;
const int s_id39_MAX = MAX_AMOUNT;
module s_id39

    s_id39 : [s_id39_MIN..s_id39_MAX] init 0; // Initial amount 0

    // r_id168
    [r_id168] s_id39 <= s_id39_MAX-1 -> (s_id39'=s_id39+1);
    // r_id171
    [r_id171] s_id39 > 0 -> (s_id39'=s_id39-1);
    // r_id172
    [r_id172] s_id39 > 0 -> (s_id39'=s_id39-1);
    // r_id173
    [r_id173] s_id39 > 0 -> (s_id39'=s_id39-1);
    // r_id174
    [r_id174] s_id39 <= s_id39_MAX-1 -> (s_id39'=s_id39+1);
    // r_id186
    [r_id186] s_id39 <= s_id39_MAX-1 -> (s_id39'=s_id39+1);

endmodule

// Species s_id40 ([p2^* p1^*]<x2^*>::[x1^* y^* z2^*]::[z1^* q2^*]::{q2^}[q1^*])
const int s_id40_MIN = 0;
const int s_id40_MAX = MAX_AMOUNT;
module s_id40

    s_id40 : [s_id40_MIN..s_id40_MAX] init 0; // Initial amount 0

    // r_id155
    [r_id155] s_id40 <= s_id40_MAX-1 -> (s_id40'=s_id40+1);
    // r_id171
    [r_id171] s_id40 <= s_id40_MAX-1 -> (s_id40'=s_id40+1);
    // r_id174
    [r_id174] s_id40 > 0 -> (s_id40'=s_id40-1);
    // r_id175
    [r_id175] s_id40 > 0 -> (s_id40'=s_id40-1);
    // r_id176
    [r_id176] s_id40 > 0 -> (s_id40'=s_id40-1);
    // r_id177
    [r_id177] s_id40 > 0 -> (s_id40'=s_id40-1);
    // r_id178
    [r_id178] s_id40 <= s_id40_MAX-1 -> (s_id40'=s_id40+1);
    // r_id182
    [r_id182] s_id40 <= s_id40_MAX-1 -> (s_id40'=s_id40+1);

endmodule

// Species s_id41 ([p2^* p1^*]::[x2^*]{x1^}::[x1^* y^* z2^*]::[z1^* q2^*]::{q2^}[q1^*])
const int s_id41_MIN = 0;
const int s_id41_MAX = MAX_AMOUNT;
module s_id41

    s_id41 : [s_id41_MIN..s_id41_MAX] init 0; // Initial amount 0

    // r_id159
    [r_id159] s_id41 <= s_id41_MAX-1 -> (s_id41'=s_id41+1);
    // r_id164
    [r_id164] s_id41 <= s_id41_MAX-1 -> (s_id41'=s_id41+1);
    // r_id169
    [r_id169] s_id41 <= s_id41_MAX-1 -> (s_id41'=s_id41+1);
    // r_id175
    [r_id175] s_id41 <= s_id41_MAX-1 -> (s_id41'=s_id41+1);
    // r_id178
    [r_id178] s_id41 > 0 -> (s_id41'=s_id41-1);
    // r_id179
    [r_id179] s_id41 > 0 -> (s_id41'=s_id41-1);
    // r_id180
    [r_id180] s_id41 > 0 -> (s_id41'=s_id41-1);
    // r_id181
    [r_id181] s_id41 > 0 -> (s_id41'=s_id41-1);

endmodule

// Species s_id42 ([p2^* p1^*]::{p1^}[x2^*]::[x1^* y^* z2^*]::[z1^* q2^*]::{q2^}[q1^*])
const int s_id42_MIN = 0;
const int s_id42_MAX = MAX_AMOUNT;
module s_id42

    s_id42 : [s_id42_MIN..s_id42_MAX] init 0; // Initial amount 0

    // r_id74
    [r_id74] s_id42 <= s_id42_MAX-1 -> (s_id42'=s_id42+1);
    // r_id151
    [r_id151] s_id42 <= s_id42_MAX-1 -> (s_id42'=s_id42+1);
    // r_id176
    [r_id176] s_id42 <= s_id42_MAX-1 -> (s_id42'=s_id42+1);
    // r_id182
    [r_id182] s_id42 > 0 -> (s_id42'=s_id42-1);
    // r_id183
    [r_id183] s_id42 > 0 -> (s_id42'=s_id42-1);
    // r_id184
    [r_id184] s_id42 > 0 -> (s_id42'=s_id42-1);
    // r_id185
    [r_id185] s_id42 > 0 -> (s_id42'=s_id42-1);
    // r_id187
    [r_id187] s_id42 <= s_id42_MAX-1 -> (s_id42'=s_id42+1);

endmodule

// Species s_id43 ([p2^* p1^*]::{p1^}[x2^*]::[x1^* y^* z2^*]::[z1^* q2^*]<q1^*>)
const int s_id43_MIN = 0;
const int s_id43_MAX = MAX_AMOUNT;
module s_id43

    s_id43 : [s_id43_MIN..s_id43_MAX] init 0; // Initial amount 0

    // r_id71
    [r_id71] s_id43 <= s_id43_MAX-1 -> (s_id43'=s_id43+1);
    // r_id173
    [r_id173] s_id43 <= s_id43_MAX-1 -> (s_id43'=s_id43+1);
    // r_id183
    [r_id183] s_id43 <= s_id43_MAX-1 -> (s_id43'=s_id43+1);
    // r_id186
    [r_id186] s_id43 > 0 -> (s_id43'=s_id43-1);
    // r_id187
    [r_id187] s_id43 > 0 -> (s_id43'=s_id43-1);
    // r_id188
    [r_id188] s_id43 > 0 -> (s_id43'=s_id43-1);

endmodule

// Species s_id44 (<y^*>[z2^* r1^]<r2^>)
const int s_id44_MIN = 0;
const int s_id44_MAX = MAX_AMOUNT;
module s_id44

    s_id44 : [s_id44_MIN..s_id44_MAX] init N; // Initial amount N

    // r_id189
    [r_id189] s_id44 > 0 -> (s_id44'=s_id44-1);
    // r_id190
    [r_id190] s_id44 <= s_id44_MAX-1 -> (s_id44'=s_id44+1);

endmodule

// Species s_id45 ({x1^}[y^*]{z2^}::[z2^* r1^]<r2^>)
const int s_id45_MIN = 0;
const int s_id45_MAX = MAX_AMOUNT;
module s_id45

    s_id45 : [s_id45_MIN..s_id45_MAX] init 0; // Initial amount 0

    // r_id189
    [r_id189] s_id45 <= s_id45_MAX-1 -> (s_id45'=s_id45+1);
    // r_id190
    [r_id190] s_id45 > 0 -> (s_id45'=s_id45-1);
    // r_id191
    [r_id191] s_id45 > 0 -> (s_id45'=s_id45-1);
    // r_id193
    [r_id193] s_id45 <= s_id45_MAX-1 -> (s_id45'=s_id45+1);

endmodule

// Species s_id46 ({x1^}[y^* z2^*]::{z2^}[r1^]<r2^>)
const int s_id46_MIN = 0;
const int s_id46_MAX = MAX_AMOUNT;
module s_id46

    s_id46 : [s_id46_MIN..s_id46_MAX] init 0; // Initial amount 0

    // r_id191
    [r_id191] s_id46 <= s_id46_MAX-1 -> (s_id46'=s_id46+1);
    // r_id192
    [r_id192] s_id46 > 0 -> (s_id46'=s_id46-1);
    // r_id193
    [r_id193] s_id46 > 0 -> (s_id46'=s_id46-1);
    // r_id194
    [r_id194] s_id46 <= s_id46_MAX-1 -> (s_id46'=s_id46+1);

endmodule

// Species s_id47 ({x1^}[y^* z2^*]<r1^ r2^>)
const int s_id47_MIN = 0;
const int s_id47_MAX = MAX_AMOUNT;
module s_id47

    s_id47 : [s_id47_MIN..s_id47_MAX] init 0; // Initial amount 0

    // r_id192
    [r_id192] s_id47 <= s_id47_MAX-1 -> (s_id47'=s_id47+1);
    // r_id194
    [r_id194] s_id47 > 0 -> (s_id47'=s_id47-1);

endmodule

// Species s_id48 ({z2^ r1^*})
const int s_id48_MIN = 0;
const int s_id48_MAX = MAX_AMOUNT;
module s_id48

    s_id48 : [s_id48_MIN..s_id48_MAX] init 0; // Initial amount 0

    // r_id192
    [r_id192] s_id48 <= s_id48_MAX-1 -> (s_id48'=s_id48+1);
    // r_id194
    [r_id194] s_id48 > 0 -> (s_id48'=s_id48-1);
    // r_id231
    [r_id231] s_id48 > 0 -> (s_id48'=s_id48-1);
    // r_id232
    [r_id232] s_id48 > 0 -> (s_id48'=s_id48-1);
    // r_id233
    [r_id233] s_id48 <= s_id48_MAX-1 -> (s_id48'=s_id48+1);
    // r_id234
    [r_id234] s_id48 > 0 -> (s_id48'=s_id48-1);
    // r_id237
    [r_id237] s_id48 <= s_id48_MAX-1 -> (s_id48'=s_id48+1);
    // r_id238
    [r_id238] s_id48 <= s_id48_MAX-1 -> (s_id48'=s_id48+1);
    // r_id239
    [r_id239] s_id48 <= s_id48_MAX-1 -> (s_id48'=s_id48+1);
    // r_id240
    [r_id240] s_id48 <= s_id48_MAX-1 -> (s_id48'=s_id48+1);
    // r_id241
    [r_id241] s_id48 <= s_id48_MAX-1 -> (s_id48'=s_id48+1);
    // r_id242
    [r_id242] s_id48 > 0 -> (s_id48'=s_id48-1);

endmodule

// Species s_id49 (<p1^* x2^*>)
const int s_id49_MIN = 0;
const int s_id49_MAX = MAX_AMOUNT;
module s_id49

    s_id49 : [s_id49_MIN..s_id49_MAX] init N; // Initial amount N

    // r_id195
    [r_id195] s_id49 > 0 -> (s_id49'=s_id49-1);
    // r_id196
    [r_id196] s_id49 > 0 -> (s_id49'=s_id49-1);
    // r_id197
    [r_id197] s_id49 <= s_id49_MAX-1 -> (s_id49'=s_id49+1);
    // r_id199
    [r_id199] s_id49 > 0 -> (s_id49'=s_id49-1);
    // r_id205
    [r_id205] s_id49 <= s_id49_MAX-1 -> (s_id49'=s_id49+1);
    // r_id207
    [r_id207] s_id49 > 0 -> (s_id49'=s_id49-1);
    // r_id209
    [r_id209] s_id49 <= s_id49_MAX-1 -> (s_id49'=s_id49+1);
    // r_id210
    [r_id210] s_id49 <= s_id49_MAX-1 -> (s_id49'=s_id49+1);
    // r_id211
    [r_id211] s_id49 <= s_id49_MAX-1 -> (s_id49'=s_id49+1);
    // r_id212
    [r_id212] s_id49 <= s_id49_MAX-1 -> (s_id49'=s_id49+1);

endmodule

// Species s_id50 ([p1^*]<x2^*>{x2^})
const int s_id50_MIN = 0;
const int s_id50_MAX = MAX_AMOUNT;
module s_id50

    s_id50 : [s_id50_MIN..s_id50_MAX] init 0; // Initial amount 0

    // r_id195
    [r_id195] s_id50 <= s_id50_MAX-1 -> (s_id50'=s_id50+1);
    // r_id197
    [r_id197] s_id50 > 0 -> (s_id50'=s_id50-1);
    // r_id198
    [r_id198] s_id50 > 0 -> (s_id50'=s_id50-1);
    // r_id199
    [r_id199] s_id50 > 0 -> (s_id50'=s_id50-1);
    // r_id200
    [r_id200] s_id50 > 0 -> (s_id50'=s_id50-1);
    // r_id202
    [r_id202] s_id50 <= s_id50_MAX-1 -> (s_id50'=s_id50+1);
    // r_id210
    [r_id210] s_id50 <= s_id50_MAX-1 -> (s_id50'=s_id50+1);

endmodule

// Species s_id51 ([p1^*]{x2^}::{p1^}[x2^*])
const int s_id51_MIN = 0;
const int s_id51_MAX = MAX_AMOUNT;
module s_id51

    s_id51 : [s_id51_MIN..s_id51_MAX] init 0; // Initial amount 0

    // r_id198
    [r_id198] s_id51 <= s_id51_MAX-1 -> (s_id51'=s_id51+1);
    // r_id201
    [r_id201] s_id51 > 0 -> (s_id51'=s_id51-1);
    // r_id202
    [r_id202] s_id51 > 0 -> (s_id51'=s_id51-1);
    // r_id203
    [r_id203] s_id51 > 0 -> (s_id51'=s_id51-1);
    // r_id204
    [r_id204] s_id51 > 0 -> (s_id51'=s_id51-1);
    // r_id206
    [r_id206] s_id51 <= s_id51_MAX-1 -> (s_id51'=s_id51+1);

endmodule

// Species s_id52 ({p1^}<p1^*>[x2^*])
const int s_id52_MIN = 0;
const int s_id52_MAX = MAX_AMOUNT;
module s_id52

    s_id52 : [s_id52_MIN..s_id52_MAX] init 0; // Initial amount 0

    // r_id196
    [r_id196] s_id52 <= s_id52_MAX-1 -> (s_id52'=s_id52+1);
    // r_id201
    [r_id201] s_id52 <= s_id52_MAX-1 -> (s_id52'=s_id52+1);
    // r_id205
    [r_id205] s_id52 > 0 -> (s_id52'=s_id52-1);
    // r_id206
    [r_id206] s_id52 > 0 -> (s_id52'=s_id52-1);
    // r_id207
    [r_id207] s_id52 > 0 -> (s_id52'=s_id52-1);
    // r_id208
    [r_id208] s_id52 > 0 -> (s_id52'=s_id52-1);
    // r_id209
    [r_id209] s_id52 <= s_id52_MAX-1 -> (s_id52'=s_id52+1);

endmodule

// Species s_id53 ([p1^*]<x2^*>:<p1^*>[x2^*])
const int s_id53_MIN = 0;
const int s_id53_MAX = MAX_AMOUNT;
module s_id53

    s_id53 : [s_id53_MIN..s_id53_MAX] init 0; // Initial amount 0

    // r_id199
    [r_id199] s_id53 <= s_id53_MAX-1 -> (s_id53'=s_id53+1);
    // r_id207
    [r_id207] s_id53 <= s_id53_MAX-1 -> (s_id53'=s_id53+1);
    // r_id209
    [r_id209] s_id53 > 0 -> (s_id53'=s_id53-1);
    // r_id210
    [r_id210] s_id53 > 0 -> (s_id53'=s_id53-1);
    // r_id211
    [r_id211] s_id53 > 0 -> (s_id53'=s_id53-1);
    // r_id212
    [r_id212] s_id53 > 0 -> (s_id53'=s_id53-1);

endmodule

// Species s_id54 ([p1^* x2^*])
const int s_id54_MIN = 0;
const int s_id54_MAX = MAX_AMOUNT;
module s_id54

    s_id54 : [s_id54_MIN..s_id54_MAX] init 0; // Initial amount 0

    // r_id200
    [r_id200] s_id54 <= s_id54_MAX-1 -> (s_id54'=s_id54+1);
    // r_id203
    [r_id203] s_id54 <= s_id54_MAX-1 -> (s_id54'=s_id54+1);
    // r_id204
    [r_id204] s_id54 <= s_id54_MAX-1 -> (s_id54'=s_id54+1);
    // r_id208
    [r_id208] s_id54 <= s_id54_MAX-1 -> (s_id54'=s_id54+1);
    // r_id211
    [r_id211] s_id54 <= s_id54_MAX-1 -> (s_id54'=s_id54+1);
    // r_id212
    [r_id212] s_id54 <= s_id54_MAX-1 -> (s_id54'=s_id54+1);

endmodule

// Species s_id55 (<z1^* q2^*>)
const int s_id55_MIN = 0;
const int s_id55_MAX = MAX_AMOUNT;
module s_id55

    s_id55 : [s_id55_MIN..s_id55_MAX] init N; // Initial amount N

    // r_id213
    [r_id213] s_id55 > 0 -> (s_id55'=s_id55-1);
    // r_id214
    [r_id214] s_id55 > 0 -> (s_id55'=s_id55-1);
    // r_id215
    [r_id215] s_id55 <= s_id55_MAX-1 -> (s_id55'=s_id55+1);
    // r_id217
    [r_id217] s_id55 > 0 -> (s_id55'=s_id55-1);
    // r_id223
    [r_id223] s_id55 <= s_id55_MAX-1 -> (s_id55'=s_id55+1);
    // r_id225
    [r_id225] s_id55 > 0 -> (s_id55'=s_id55-1);
    // r_id227
    [r_id227] s_id55 <= s_id55_MAX-1 -> (s_id55'=s_id55+1);
    // r_id228
    [r_id228] s_id55 <= s_id55_MAX-1 -> (s_id55'=s_id55+1);
    // r_id229
    [r_id229] s_id55 <= s_id55_MAX-1 -> (s_id55'=s_id55+1);
    // r_id230
    [r_id230] s_id55 <= s_id55_MAX-1 -> (s_id55'=s_id55+1);

endmodule

// Species s_id56 ([z1^*]<q2^*>{q2^})
const int s_id56_MIN = 0;
const int s_id56_MAX = MAX_AMOUNT;
module s_id56

    s_id56 : [s_id56_MIN..s_id56_MAX] init 0; // Initial amount 0

    // r_id213
    [r_id213] s_id56 <= s_id56_MAX-1 -> (s_id56'=s_id56+1);
    // r_id215
    [r_id215] s_id56 > 0 -> (s_id56'=s_id56-1);
    // r_id216
    [r_id216] s_id56 > 0 -> (s_id56'=s_id56-1);
    // r_id217
    [r_id217] s_id56 > 0 -> (s_id56'=s_id56-1);
    // r_id218
    [r_id218] s_id56 > 0 -> (s_id56'=s_id56-1);
    // r_id220
    [r_id220] s_id56 <= s_id56_MAX-1 -> (s_id56'=s_id56+1);
    // r_id228
    [r_id228] s_id56 <= s_id56_MAX-1 -> (s_id56'=s_id56+1);

endmodule

// Species s_id57 ([z1^*]{q2^}::{z1^}[q2^*])
const int s_id57_MIN = 0;
const int s_id57_MAX = MAX_AMOUNT;
module s_id57

    s_id57 : [s_id57_MIN..s_id57_MAX] init 0; // Initial amount 0

    // r_id216
    [r_id216] s_id57 <= s_id57_MAX-1 -> (s_id57'=s_id57+1);
    // r_id219
    [r_id219] s_id57 > 0 -> (s_id57'=s_id57-1);
    // r_id220
    [r_id220] s_id57 > 0 -> (s_id57'=s_id57-1);
    // r_id221
    [r_id221] s_id57 > 0 -> (s_id57'=s_id57-1);
    // r_id222
    [r_id222] s_id57 > 0 -> (s_id57'=s_id57-1);
    // r_id224
    [r_id224] s_id57 <= s_id57_MAX-1 -> (s_id57'=s_id57+1);

endmodule

// Species s_id58 ({z1^}<z1^*>[q2^*])
const int s_id58_MIN = 0;
const int s_id58_MAX = MAX_AMOUNT;
module s_id58

    s_id58 : [s_id58_MIN..s_id58_MAX] init 0; // Initial amount 0

    // r_id214
    [r_id214] s_id58 <= s_id58_MAX-1 -> (s_id58'=s_id58+1);
    // r_id219
    [r_id219] s_id58 <= s_id58_MAX-1 -> (s_id58'=s_id58+1);
    // r_id223
    [r_id223] s_id58 > 0 -> (s_id58'=s_id58-1);
    // r_id224
    [r_id224] s_id58 > 0 -> (s_id58'=s_id58-1);
    // r_id225
    [r_id225] s_id58 > 0 -> (s_id58'=s_id58-1);
    // r_id226
    [r_id226] s_id58 > 0 -> (s_id58'=s_id58-1);
    // r_id227
    [r_id227] s_id58 <= s_id58_MAX-1 -> (s_id58'=s_id58+1);

endmodule

// Species s_id59 ([z1^*]<q2^*>:<z1^*>[q2^*])
const int s_id59_MIN = 0;
const int s_id59_MAX = MAX_AMOUNT;
module s_id59

    s_id59 : [s_id59_MIN..s_id59_MAX] init 0; // Initial amount 0

    // r_id217
    [r_id217] s_id59 <= s_id59_MAX-1 -> (s_id59'=s_id59+1);
    // r_id225
    [r_id225] s_id59 <= s_id59_MAX-1 -> (s_id59'=s_id59+1);
    // r_id227
    [r_id227] s_id59 > 0 -> (s_id59'=s_id59-1);
    // r_id228
    [r_id228] s_id59 > 0 -> (s_id59'=s_id59-1);
    // r_id229
    [r_id229] s_id59 > 0 -> (s_id59'=s_id59-1);
    // r_id230
    [r_id230] s_id59 > 0 -> (s_id59'=s_id59-1);

endmodule

// Species s_id60 ([z1^* q2^*])
const int s_id60_MIN = 0;
const int s_id60_MAX = MAX_AMOUNT;
module s_id60

    s_id60 : [s_id60_MIN..s_id60_MAX] init 0; // Initial amount 0

    // r_id218
    [r_id218] s_id60 <= s_id60_MAX-1 -> (s_id60'=s_id60+1);
    // r_id221
    [r_id221] s_id60 <= s_id60_MAX-1 -> (s_id60'=s_id60+1);
    // r_id222
    [r_id222] s_id60 <= s_id60_MAX-1 -> (s_id60'=s_id60+1);
    // r_id226
    [r_id226] s_id60 <= s_id60_MAX-1 -> (s_id60'=s_id60+1);
    // r_id229
    [r_id229] s_id60 <= s_id60_MAX-1 -> (s_id60'=s_id60+1);
    // r_id230
    [r_id230] s_id60 <= s_id60_MAX-1 -> (s_id60'=s_id60+1);

endmodule

// Species s_id61 (<z2^* r1^>)
const int s_id61_MIN = 0;
const int s_id61_MAX = MAX_AMOUNT;
module s_id61

    s_id61 : [s_id61_MIN..s_id61_MAX] init N; // Initial amount N

    // r_id231
    [r_id231] s_id61 > 0 -> (s_id61'=s_id61-1);
    // r_id232
    [r_id232] s_id61 > 0 -> (s_id61'=s_id61-1);
    // r_id233
    [r_id233] s_id61 <= s_id61_MAX-1 -> (s_id61'=s_id61+1);
    // r_id235
    [r_id235] s_id61 > 0 -> (s_id61'=s_id61-1);
    // r_id241
    [r_id241] s_id61 <= s_id61_MAX-1 -> (s_id61'=s_id61+1);
    // r_id243
    [r_id243] s_id61 > 0 -> (s_id61'=s_id61-1);
    // r_id245
    [r_id245] s_id61 <= s_id61_MAX-1 -> (s_id61'=s_id61+1);
    // r_id246
    [r_id246] s_id61 <= s_id61_MAX-1 -> (s_id61'=s_id61+1);
    // r_id247
    [r_id247] s_id61 <= s_id61_MAX-1 -> (s_id61'=s_id61+1);
    // r_id248
    [r_id248] s_id61 <= s_id61_MAX-1 -> (s_id61'=s_id61+1);

endmodule

// Species s_id62 ([z2^*]<r1^>{r1^*})
const int s_id62_MIN = 0;
const int s_id62_MAX = MAX_AMOUNT;
module s_id62

    s_id62 : [s_id62_MIN..s_id62_MAX] init 0; // Initial amount 0

    // r_id231
    [r_id231] s_id62 <= s_id62_MAX-1 -> (s_id62'=s_id62+1);
    // r_id233
    [r_id233] s_id62 > 0 -> (s_id62'=s_id62-1);
    // r_id234
    [r_id234] s_id62 > 0 -> (s_id62'=s_id62-1);
    // r_id235
    [r_id235] s_id62 > 0 -> (s_id62'=s_id62-1);
    // r_id236
    [r_id236] s_id62 > 0 -> (s_id62'=s_id62-1);
    // r_id238
    [r_id238] s_id62 <= s_id62_MAX-1 -> (s_id62'=s_id62+1);
    // r_id246
    [r_id246] s_id62 <= s_id62_MAX-1 -> (s_id62'=s_id62+1);

endmodule

// Species s_id63 ([z2^*]{r1^*}::{z2^}[r1^])
const int s_id63_MIN = 0;
const int s_id63_MAX = MAX_AMOUNT;
module s_id63

    s_id63 : [s_id63_MIN..s_id63_MAX] init 0; // Initial amount 0

    // r_id234
    [r_id234] s_id63 <= s_id63_MAX-1 -> (s_id63'=s_id63+1);
    // r_id237
    [r_id237] s_id63 > 0 -> (s_id63'=s_id63-1);
    // r_id238
    [r_id238] s_id63 > 0 -> (s_id63'=s_id63-1);
    // r_id239
    [r_id239] s_id63 > 0 -> (s_id63'=s_id63-1);
    // r_id240
    [r_id240] s_id63 > 0 -> (s_id63'=s_id63-1);
    // r_id242
    [r_id242] s_id63 <= s_id63_MAX-1 -> (s_id63'=s_id63+1);

endmodule

// Species s_id64 ({z2^}<z2^*>[r1^])
const int s_id64_MIN = 0;
const int s_id64_MAX = MAX_AMOUNT;
module s_id64

    s_id64 : [s_id64_MIN..s_id64_MAX] init 0; // Initial amount 0

    // r_id232
    [r_id232] s_id64 <= s_id64_MAX-1 -> (s_id64'=s_id64+1);
    // r_id237
    [r_id237] s_id64 <= s_id64_MAX-1 -> (s_id64'=s_id64+1);
    // r_id241
    [r_id241] s_id64 > 0 -> (s_id64'=s_id64-1);
    // r_id242
    [r_id242] s_id64 > 0 -> (s_id64'=s_id64-1);
    // r_id243
    [r_id243] s_id64 > 0 -> (s_id64'=s_id64-1);
    // r_id244
    [r_id244] s_id64 > 0 -> (s_id64'=s_id64-1);
    // r_id245
    [r_id245] s_id64 <= s_id64_MAX-1 -> (s_id64'=s_id64+1);

endmodule

// Species s_id65 ([z2^*]<r1^>:<z2^*>[r1^])
const int s_id65_MIN = 0;
const int s_id65_MAX = MAX_AMOUNT;
module s_id65

    s_id65 : [s_id65_MIN..s_id65_MAX] init 0; // Initial amount 0

    // r_id235
    [r_id235] s_id65 <= s_id65_MAX-1 -> (s_id65'=s_id65+1);
    // r_id243
    [r_id243] s_id65 <= s_id65_MAX-1 -> (s_id65'=s_id65+1);
    // r_id245
    [r_id245] s_id65 > 0 -> (s_id65'=s_id65-1);
    // r_id246
    [r_id246] s_id65 > 0 -> (s_id65'=s_id65-1);
    // r_id247
    [r_id247] s_id65 > 0 -> (s_id65'=s_id65-1);
    // r_id248
    [r_id248] s_id65 > 0 -> (s_id65'=s_id65-1);

endmodule

// Species s_id66 ([z2^* r1^])
const int s_id66_MIN = 0;
const int s_id66_MAX = MAX_AMOUNT;
module s_id66

    s_id66 : [s_id66_MIN..s_id66_MAX] init 0; // Initial amount 0

    // r_id236
    [r_id236] s_id66 <= s_id66_MAX-1 -> (s_id66'=s_id66+1);
    // r_id239
    [r_id239] s_id66 <= s_id66_MAX-1 -> (s_id66'=s_id66+1);
    // r_id240
    [r_id240] s_id66 <= s_id66_MAX-1 -> (s_id66'=s_id66+1);
    // r_id244
    [r_id244] s_id66 <= s_id66_MAX-1 -> (s_id66'=s_id66+1);
    // r_id247
    [r_id247] s_id66 <= s_id66_MAX-1 -> (s_id66'=s_id66+1);
    // r_id248
    [r_id248] s_id66 <= s_id66_MAX-1 -> (s_id66'=s_id66+1);

endmodule

// Reaction rates
module reaction_rates

    // r_id67
    [r_id67] (k_r_id67*s_id4*s_id0) > 0 -> (k_r_id67*s_id4*s_id0) : true;
    // r_id68
    [r_id68] (k_r_id68*s_id4*s_id1) > 0 -> (k_r_id68*s_id4*s_id1) : true;
    // r_id69
    [r_id69] (k_r_id69*s_id5) > 0 -> (k_r_id69*s_id5) : true;
    // r_id70
    [r_id70] (k_r_id70*s_id5*s_id1) > 0 -> (k_r_id70*s_id5*s_id1) : true;
    // r_id71
    [r_id71] (k_r_id71*s_id5) > 0 -> (k_r_id71*s_id5) : true;
    // r_id72
    [r_id72] (k_r_id72*s_id6) > 0 -> (k_r_id72*s_id6) : true;
    // r_id73
    [r_id73] (k_r_id73*s_id6) > 0 -> (k_r_id73*s_id6) : true;
    // r_id74
    [r_id74] (k_r_id74*s_id6) > 0 -> (k_r_id74*s_id6) : true;
    // r_id75
    [r_id75] (k_r_id75*s_id6) > 0 -> (k_r_id75*s_id6) : true;
    // r_id76
    [r_id76] (k_r_id76*s_id7) > 0 -> (k_r_id76*s_id7) : true;
    // r_id77
    [r_id77] (k_r_id77*s_id7*s_id0) > 0 -> (k_r_id77*s_id7*s_id0) : true;
    // r_id78
    [r_id78] (k_r_id78*s_id7) > 0 -> (k_r_id78*s_id7) : true;
    // r_id79
    [r_id79] (k_r_id79*s_id8) > 0 -> (k_r_id79*s_id8) : true;
    // r_id80
    [r_id80] (k_r_id80*s_id8*s_id0) > 0 -> (k_r_id80*s_id8*s_id0) : true;
    // r_id81
    [r_id81] (k_r_id81*s_id8) > 0 -> (k_r_id81*s_id8) : true;
    // r_id82
    [r_id82] (k_r_id82*s_id9*s_id0) > 0 -> (k_r_id82*s_id9*s_id0) : true;
    // r_id83
    [r_id83] (k_r_id83*s_id9*s_id3) > 0 -> (k_r_id83*s_id9*s_id3) : true;
    // r_id84
    [r_id84] (k_r_id84*s_id10) > 0 -> (k_r_id84*s_id10) : true;
    // r_id85
    [r_id85] (k_r_id85*s_id10*s_id3) > 0 -> (k_r_id85*s_id10*s_id3) : true;
    // r_id86
    [r_id86] (k_r_id86*s_id10) > 0 -> (k_r_id86*s_id10) : true;
    // r_id87
    [r_id87] (k_r_id87*s_id11) > 0 -> (k_r_id87*s_id11) : true;
    // r_id88
    [r_id88] (k_r_id88*s_id11) > 0 -> (k_r_id88*s_id11) : true;
    // r_id89
    [r_id89] (k_r_id89*s_id11) > 0 -> (k_r_id89*s_id11) : true;
    // r_id90
    [r_id90] (k_r_id90*s_id11) > 0 -> (k_r_id90*s_id11) : true;
    // r_id91
    [r_id91] (k_r_id91*s_id12) > 0 -> (k_r_id91*s_id12) : true;
    // r_id92
    [r_id92] (k_r_id92*s_id12*s_id0) > 0 -> (k_r_id92*s_id12*s_id0) : true;
    // r_id93
    [r_id93] (k_r_id93*s_id12) > 0 -> (k_r_id93*s_id12) : true;
    // r_id94
    [r_id94] (k_r_id94*s_id13*s_id0) > 0 -> (k_r_id94*s_id13*s_id0) : true;
    // r_id95
    [r_id95] (k_r_id95*s_id13) > 0 -> (k_r_id95*s_id13) : true;
    // r_id96
    [r_id96] (k_r_id96*s_id14) > 0 -> (k_r_id96*s_id14) : true;
    // r_id97
    [r_id97] (k_r_id97*s_id14) > 0 -> (k_r_id97*s_id14) : true;
    // r_id98
    [r_id98] (k_r_id98*s_id14) > 0 -> (k_r_id98*s_id14) : true;
    // r_id99
    [r_id99] (k_r_id99*s_id15) > 0 -> (k_r_id99*s_id15) : true;
    // r_id100
    [r_id100] (k_r_id100*s_id15) > 0 -> (k_r_id100*s_id15) : true;
    // r_id101
    [r_id101] (k_r_id101*s_id15) > 0 -> (k_r_id101*s_id15) : true;
    // r_id102
    [r_id102] (k_r_id102*s_id16*s_id2) > 0 -> (k_r_id102*s_id16*s_id2) : true;
    // r_id103
    [r_id103] (k_r_id103*s_id16) > 0 -> (k_r_id103*s_id16) : true;
    // r_id104
    [r_id104] (k_r_id104*s_id17) > 0 -> (k_r_id104*s_id17) : true;
    // r_id105
    [r_id105] (k_r_id105*s_id17) > 0 -> (k_r_id105*s_id17) : true;
    // r_id106
    [r_id106] (k_r_id106*s_id17) > 0 -> (k_r_id106*s_id17) : true;
    // r_id107
    [r_id107] (k_r_id107*s_id18) > 0 -> (k_r_id107*s_id18) : true;
    // r_id108
    [r_id108] (k_r_id108*s_id18) > 0 -> (k_r_id108*s_id18) : true;
    // r_id109
    [r_id109] (k_r_id109*s_id18) > 0 -> (k_r_id109*s_id18) : true;
    // r_id110
    [r_id110] (k_r_id110*s_id19*s_id20) > 0 -> (k_r_id110*s_id19*s_id20) : true;
    // r_id111
    [r_id111] (k_r_id111*s_id21) > 0 -> (k_r_id111*s_id21) : true;
    // r_id112
    [r_id112] (k_r_id112*s_id21) > 0 -> (k_r_id112*s_id21) : true;
    // r_id113
    [r_id113] (k_r_id113*s_id21) > 0 -> (k_r_id113*s_id21) : true;
    // r_id114
    [r_id114] (k_r_id114*s_id22*s_id3) > 0 -> (k_r_id114*s_id22*s_id3) : true;
    // r_id115
    [r_id115] (k_r_id115*s_id22) > 0 -> (k_r_id115*s_id22) : true;
    // r_id116
    [r_id116] (k_r_id116*s_id23) > 0 -> (k_r_id116*s_id23) : true;
    // r_id117
    [r_id117] (k_r_id117*s_id23*s_id3) > 0 -> (k_r_id117*s_id23*s_id3) : true;
    // r_id118
    [r_id118] (k_r_id118*s_id23) > 0 -> (k_r_id118*s_id23) : true;
    // r_id119
    [r_id119] (k_r_id119*s_id24*s_id2) > 0 -> (k_r_id119*s_id24*s_id2) : true;
    // r_id120
    [r_id120] (k_r_id120*s_id24*s_id3) > 0 -> (k_r_id120*s_id24*s_id3) : true;
    // r_id121
    [r_id121] (k_r_id121*s_id25) > 0 -> (k_r_id121*s_id25) : true;
    // r_id122
    [r_id122] (k_r_id122*s_id25*s_id2) > 0 -> (k_r_id122*s_id25*s_id2) : true;
    // r_id123
    [r_id123] (k_r_id123*s_id25) > 0 -> (k_r_id123*s_id25) : true;
    // r_id124
    [r_id124] (k_r_id124*s_id26) > 0 -> (k_r_id124*s_id26) : true;
    // r_id125
    [r_id125] (k_r_id125*s_id26) > 0 -> (k_r_id125*s_id26) : true;
    // r_id126
    [r_id126] (k_r_id126*s_id26) > 0 -> (k_r_id126*s_id26) : true;
    // r_id127
    [r_id127] (k_r_id127*s_id26) > 0 -> (k_r_id127*s_id26) : true;
    // r_id128
    [r_id128] (k_r_id128*s_id16*s_id27) > 0 -> (k_r_id128*s_id16*s_id27) : true;
    // r_id129
    [r_id129] (k_r_id129*s_id24*s_id27) > 0 -> (k_r_id129*s_id24*s_id27) : true;
    // r_id130
    [r_id130] (k_r_id130*s_id25*s_id27) > 0 -> (k_r_id130*s_id25*s_id27) : true;
    // r_id131
    [r_id131] (k_r_id131*s_id28) > 0 -> (k_r_id131*s_id28) : true;
    // r_id132
    [r_id132] (k_r_id132*s_id28*s_id3) > 0 -> (k_r_id132*s_id28*s_id3) : true;
    // r_id133
    [r_id133] (k_r_id133*s_id28) > 0 -> (k_r_id133*s_id28) : true;
    // r_id134
    [r_id134] (k_r_id134*s_id29) > 0 -> (k_r_id134*s_id29) : true;
    // r_id135
    [r_id135] (k_r_id135*s_id29) > 0 -> (k_r_id135*s_id29) : true;
    // r_id136
    [r_id136] (k_r_id136*s_id29) > 0 -> (k_r_id136*s_id29) : true;
    // r_id137
    [r_id137] (k_r_id137*s_id29) > 0 -> (k_r_id137*s_id29) : true;
    // r_id138
    [r_id138] (k_r_id138*s_id9*s_id30) > 0 -> (k_r_id138*s_id9*s_id30) : true;
    // r_id139
    [r_id139] (k_r_id139*s_id10*s_id30) > 0 -> (k_r_id139*s_id10*s_id30) : true;
    // r_id140
    [r_id140] (k_r_id140*s_id22*s_id30) > 0 -> (k_r_id140*s_id22*s_id30) : true;
    // r_id141
    [r_id141] (k_r_id141*s_id23*s_id30) > 0 -> (k_r_id141*s_id23*s_id30) : true;
    // r_id142
    [r_id142] (k_r_id142*s_id24*s_id30) > 0 -> (k_r_id142*s_id24*s_id30) : true;
    // r_id143
    [r_id143] (k_r_id143*s_id28*s_id30) > 0 -> (k_r_id143*s_id28*s_id30) : true;
    // r_id144
    [r_id144] (k_r_id144*s_id31) > 0 -> (k_r_id144*s_id31) : true;
    // r_id145
    [r_id145] (k_r_id145*s_id31) > 0 -> (k_r_id145*s_id31) : true;
    // r_id146
    [r_id146] (k_r_id146*s_id31) > 0 -> (k_r_id146*s_id31) : true;
    // r_id147
    [r_id147] (k_r_id147*s_id31) > 0 -> (k_r_id147*s_id31) : true;
    // r_id148
    [r_id148] (k_r_id148*s_id32) > 0 -> (k_r_id148*s_id32) : true;
    // r_id149
    [r_id149] (k_r_id149*s_id32) > 0 -> (k_r_id149*s_id32) : true;
    // r_id150
    [r_id150] (k_r_id150*s_id32) > 0 -> (k_r_id150*s_id32) : true;
    // r_id151
    [r_id151] (k_r_id151*s_id32) > 0 -> (k_r_id151*s_id32) : true;
    // r_id152
    [r_id152] (k_r_id152*s_id33) > 0 -> (k_r_id152*s_id33) : true;
    // r_id153
    [r_id153] (k_r_id153*s_id33*s_id2) > 0 -> (k_r_id153*s_id33*s_id2) : true;
    // r_id154
    [r_id154] (k_r_id154*s_id33*s_id27) > 0 -> (k_r_id154*s_id33*s_id27) : true;
    // r_id155
    [r_id155] (k_r_id155*s_id33) > 0 -> (k_r_id155*s_id33) : true;
    // r_id156
    [r_id156] (k_r_id156*s_id34) > 0 -> (k_r_id156*s_id34) : true;
    // r_id157
    [r_id157] (k_r_id157*s_id34) > 0 -> (k_r_id157*s_id34) : true;
    // r_id158
    [r_id158] (k_r_id158*s_id34) > 0 -> (k_r_id158*s_id34) : true;
    // r_id159
    [r_id159] (k_r_id159*s_id34) > 0 -> (k_r_id159*s_id34) : true;
    // r_id160
    [r_id160] (k_r_id160*s_id35) > 0 -> (k_r_id160*s_id35) : true;
    // r_id161
    [r_id161] (k_r_id161*s_id35) > 0 -> (k_r_id161*s_id35) : true;
    // r_id162
    [r_id162] (k_r_id162*s_id35) > 0 -> (k_r_id162*s_id35) : true;
    // r_id163
    [r_id163] (k_r_id163*s_id36) > 0 -> (k_r_id163*s_id36) : true;
    // r_id164
    [r_id164] (k_r_id164*s_id36) > 0 -> (k_r_id164*s_id36) : true;
    // r_id165
    [r_id165] (k_r_id165*s_id36) > 0 -> (k_r_id165*s_id36) : true;
    // r_id166
    [r_id166] (k_r_id166*s_id37*s_id1) > 0 -> (k_r_id166*s_id37*s_id1) : true;
    // r_id167
    [r_id167] (k_r_id167*s_id37) > 0 -> (k_r_id167*s_id37) : true;
    // r_id168
    [r_id168] (k_r_id168*s_id38) > 0 -> (k_r_id168*s_id38) : true;
    // r_id169
    [r_id169] (k_r_id169*s_id38*s_id1) > 0 -> (k_r_id169*s_id38*s_id1) : true;
    // r_id170
    [r_id170] (k_r_id170*s_id38) > 0 -> (k_r_id170*s_id38) : true;
    // r_id171
    [r_id171] (k_r_id171*s_id39*s_id1) > 0 -> (k_r_id171*s_id39*s_id1) : true;
    // r_id172
    [r_id172] (k_r_id172*s_id39*s_id2) > 0 -> (k_r_id172*s_id39*s_id2) : true;
    // r_id173
    [r_id173] (k_r_id173*s_id39*s_id27) > 0 -> (k_r_id173*s_id39*s_id27) : true;
    // r_id174
    [r_id174] (k_r_id174*s_id40) > 0 -> (k_r_id174*s_id40) : true;
    // r_id175
    [r_id175] (k_r_id175*s_id40*s_id2) > 0 -> (k_r_id175*s_id40*s_id2) : true;
    // r_id176
    [r_id176] (k_r_id176*s_id40*s_id27) > 0 -> (k_r_id176*s_id40*s_id27) : true;
    // r_id177
    [r_id177] (k_r_id177*s_id40) > 0 -> (k_r_id177*s_id40) : true;
    // r_id178
    [r_id178] (k_r_id178*s_id41) > 0 -> (k_r_id178*s_id41) : true;
    // r_id179
    [r_id179] (k_r_id179*s_id41) > 0 -> (k_r_id179*s_id41) : true;
    // r_id180
    [r_id180] (k_r_id180*s_id41) > 0 -> (k_r_id180*s_id41) : true;
    // r_id181
    [r_id181] (k_r_id181*s_id41) > 0 -> (k_r_id181*s_id41) : true;
    // r_id182
    [r_id182] (k_r_id182*s_id42) > 0 -> (k_r_id182*s_id42) : true;
    // r_id183
    [r_id183] (k_r_id183*s_id42) > 0 -> (k_r_id183*s_id42) : true;
    // r_id184
    [r_id184] (k_r_id184*s_id42) > 0 -> (k_r_id184*s_id42) : true;
    // r_id185
    [r_id185] (k_r_id185*s_id42) > 0 -> (k_r_id185*s_id42) : true;
    // r_id186
    [r_id186] (k_r_id186*s_id43) > 0 -> (k_r_id186*s_id43) : true;
    // r_id187
    [r_id187] (k_r_id187*s_id43*s_id1) > 0 -> (k_r_id187*s_id43*s_id1) : true;
    // r_id188
    [r_id188] (k_r_id188*s_id43) > 0 -> (k_r_id188*s_id43) : true;
    // r_id189
    [r_id189] (k_r_id189*s_id44*s_id20) > 0 -> (k_r_id189*s_id44*s_id20) : true;
    // r_id190
    [r_id190] (k_r_id190*s_id45) > 0 -> (k_r_id190*s_id45) : true;
    // r_id191
    [r_id191] (k_r_id191*s_id45) > 0 -> (k_r_id191*s_id45) : true;
    // r_id192
    [r_id192] (k_r_id192*s_id46) > 0 -> (k_r_id192*s_id46) : true;
    // r_id193
    [r_id193] (k_r_id193*s_id46) > 0 -> (k_r_id193*s_id46) : true;
    // r_id194
    [r_id194] (k_r_id194*s_id47*s_id48) > 0 -> (k_r_id194*s_id47*s_id48) : true;
    // r_id195
    [r_id195] (k_r_id195*s_id49*s_id27) > 0 -> (k_r_id195*s_id49*s_id27) : true;
    // r_id196
    [r_id196] (k_r_id196*s_id49*s_id27) > 0 -> (k_r_id196*s_id49*s_id27) : true;
    // r_id197
    [r_id197] (k_r_id197*s_id50) > 0 -> (k_r_id197*s_id50) : true;
    // r_id198
    [r_id198] (k_r_id198*s_id50*s_id27) > 0 -> (k_r_id198*s_id50*s_id27) : true;
    // r_id199
    [r_id199] (k_r_id199*s_id50*s_id49) > 0 -> (k_r_id199*s_id50*s_id49) : true;
    // r_id200
    [r_id200] (k_r_id200*s_id50) > 0 -> (k_r_id200*s_id50) : true;
    // r_id201
    [r_id201] (k_r_id201*s_id51) > 0 -> (k_r_id201*s_id51) : true;
    // r_id202
    [r_id202] (k_r_id202*s_id51) > 0 -> (k_r_id202*s_id51) : true;
    // r_id203
    [r_id203] (k_r_id203*s_id51) > 0 -> (k_r_id203*s_id51) : true;
    // r_id204
    [r_id204] (k_r_id204*s_id51) > 0 -> (k_r_id204*s_id51) : true;
    // r_id205
    [r_id205] (k_r_id205*s_id52) > 0 -> (k_r_id205*s_id52) : true;
    // r_id206
    [r_id206] (k_r_id206*s_id52*s_id27) > 0 -> (k_r_id206*s_id52*s_id27) : true;
    // r_id207
    [r_id207] (k_r_id207*s_id52*s_id49) > 0 -> (k_r_id207*s_id52*s_id49) : true;
    // r_id208
    [r_id208] (k_r_id208*s_id52) > 0 -> (k_r_id208*s_id52) : true;
    // r_id209
    [r_id209] (k_r_id209*s_id53) > 0 -> (k_r_id209*s_id53) : true;
    // r_id210
    [r_id210] (k_r_id210*s_id53) > 0 -> (k_r_id210*s_id53) : true;
    // r_id211
    [r_id211] (k_r_id211*s_id53) > 0 -> (k_r_id211*s_id53) : true;
    // r_id212
    [r_id212] (k_r_id212*s_id53) > 0 -> (k_r_id212*s_id53) : true;
    // r_id213
    [r_id213] (k_r_id213*s_id55*s_id30) > 0 -> (k_r_id213*s_id55*s_id30) : true;
    // r_id214
    [r_id214] (k_r_id214*s_id55*s_id30) > 0 -> (k_r_id214*s_id55*s_id30) : true;
    // r_id215
    [r_id215] (k_r_id215*s_id56) > 0 -> (k_r_id215*s_id56) : true;
    // r_id216
    [r_id216] (k_r_id216*s_id56*s_id30) > 0 -> (k_r_id216*s_id56*s_id30) : true;
    // r_id217
    [r_id217] (k_r_id217*s_id56*s_id55) > 0 -> (k_r_id217*s_id56*s_id55) : true;
    // r_id218
    [r_id218] (k_r_id218*s_id56) > 0 -> (k_r_id218*s_id56) : true;
    // r_id219
    [r_id219] (k_r_id219*s_id57) > 0 -> (k_r_id219*s_id57) : true;
    // r_id220
    [r_id220] (k_r_id220*s_id57) > 0 -> (k_r_id220*s_id57) : true;
    // r_id221
    [r_id221] (k_r_id221*s_id57) > 0 -> (k_r_id221*s_id57) : true;
    // r_id222
    [r_id222] (k_r_id222*s_id57) > 0 -> (k_r_id222*s_id57) : true;
    // r_id223
    [r_id223] (k_r_id223*s_id58) > 0 -> (k_r_id223*s_id58) : true;
    // r_id224
    [r_id224] (k_r_id224*s_id58*s_id30) > 0 -> (k_r_id224*s_id58*s_id30) : true;
    // r_id225
    [r_id225] (k_r_id225*s_id58*s_id55) > 0 -> (k_r_id225*s_id58*s_id55) : true;
    // r_id226
    [r_id226] (k_r_id226*s_id58) > 0 -> (k_r_id226*s_id58) : true;
    // r_id227
    [r_id227] (k_r_id227*s_id59) > 0 -> (k_r_id227*s_id59) : true;
    // r_id228
    [r_id228] (k_r_id228*s_id59) > 0 -> (k_r_id228*s_id59) : true;
    // r_id229
    [r_id229] (k_r_id229*s_id59) > 0 -> (k_r_id229*s_id59) : true;
    // r_id230
    [r_id230] (k_r_id230*s_id59) > 0 -> (k_r_id230*s_id59) : true;
    // r_id231
    [r_id231] (k_r_id231*s_id61*s_id48) > 0 -> (k_r_id231*s_id61*s_id48) : true;
    // r_id232
    [r_id232] (k_r_id232*s_id61*s_id48) > 0 -> (k_r_id232*s_id61*s_id48) : true;
    // r_id233
    [r_id233] (k_r_id233*s_id62) > 0 -> (k_r_id233*s_id62) : true;
    // r_id234
    [r_id234] (k_r_id234*s_id62*s_id48) > 0 -> (k_r_id234*s_id62*s_id48) : true;
    // r_id235
    [r_id235] (k_r_id235*s_id62*s_id61) > 0 -> (k_r_id235*s_id62*s_id61) : true;
    // r_id236
    [r_id236] (k_r_id236*s_id62) > 0 -> (k_r_id236*s_id62) : true;
    // r_id237
    [r_id237] (k_r_id237*s_id63) > 0 -> (k_r_id237*s_id63) : true;
    // r_id238
    [r_id238] (k_r_id238*s_id63) > 0 -> (k_r_id238*s_id63) : true;
    // r_id239
    [r_id239] (k_r_id239*s_id63) > 0 -> (k_r_id239*s_id63) : true;
    // r_id240
    [r_id240] (k_r_id240*s_id63) > 0 -> (k_r_id240*s_id63) : true;
    // r_id241
    [r_id241] (k_r_id241*s_id64) > 0 -> (k_r_id241*s_id64) : true;
    // r_id242
    [r_id242] (k_r_id242*s_id64*s_id48) > 0 -> (k_r_id242*s_id64*s_id48) : true;
    // r_id243
    [r_id243] (k_r_id243*s_id64*s_id61) > 0 -> (k_r_id243*s_id64*s_id61) : true;
    // r_id244
    [r_id244] (k_r_id244*s_id64) > 0 -> (k_r_id244*s_id64) : true;
    // r_id245
    [r_id245] (k_r_id245*s_id65) > 0 -> (k_r_id245*s_id65) : true;
    // r_id246
    [r_id246] (k_r_id246*s_id65) > 0 -> (k_r_id246*s_id65) : true;
    // r_id247
    [r_id247] (k_r_id247*s_id65) > 0 -> (k_r_id247*s_id65) : true;
    // r_id248
    [r_id248] (k_r_id248*s_id65) > 0 -> (k_r_id248*s_id65) : true;

endmodule

// Reward structures (one per species)

// Species s_id0 (<p1^ p2^>)
rewards "s_id0" true : s_id0; endrewards
// Species s_id1 (<q1^ q2^>)
rewards "s_id1" true : s_id1; endrewards
// Species s_id2 (<x1^ x2^>)
rewards "s_id2" true : s_id2; endrewards
// Species s_id3 (<z1^ z2^>)
rewards "s_id3" true : s_id3; endrewards
// Species s_id4 (<p2^*>[p1^* x2^*]::[x1^* y^* z2^*]::[z1^* q2^*]<q1^*>)
rewards "s_id4" true : s_id4; endrewards
// Species s_id5 ([p2^*]{p1^}::[p1^* x2^*]::[x1^* y^* z2^*]::[z1^* q2^*]<q1^*>)
rewards "s_id5" true : s_id5; endrewards
// Species s_id6 ([p2^*]{p1^}::[p1^* x2^*]::[x1^* y^* z2^*]::[z1^* q2^*]::{q2^}[q1^*])
rewards "s_id6" true : s_id6; endrewards
// Species s_id7 (<p2^*>[p1^* x2^*]::[x1^* y^* z2^*]::[z1^* q2^*]::{q2^}[q1^*])
rewards "s_id7" true : s_id7; endrewards
// Species s_id8 (<p2^*>[p1^* x2^*]::[x1^* y^* z2^*]::[z1^*]{q2^}::[q2^* q1^*])
rewards "s_id8" true : s_id8; endrewards
// Species s_id9 (<p2^*>[p1^* x2^*]::[x1^* y^* z2^*]<z1^*>::[q2^* q1^*])
rewards "s_id9" true : s_id9; endrewards
// Species s_id10 ([p2^*]{p1^}::[p1^* x2^*]::[x1^* y^* z2^*]<z1^*>::[q2^* q1^*])
rewards "s_id10" true : s_id10; endrewards
// Species s_id11 ([p2^*]{p1^}::[p1^* x2^*]::[x1^* y^* z2^*]::{z2^}[z1^*]::[q2^* q1^*])
rewards "s_id11" true : s_id11; endrewards
// Species s_id12 (<p2^*>[p1^* x2^*]::[x1^* y^* z2^*]::{z2^}[z1^*]::[q2^* q1^*])
rewards "s_id12" true : s_id12; endrewards
// Species s_id13 (<p2^*>[p1^* x2^*]::[x1^* y^*]{z2^}::[z2^* z1^*]::[q2^* q1^*])
rewards "s_id13" true : s_id13; endrewards
// Species s_id14 ([p2^*]{p1^}::[p1^* x2^*]::[x1^* y^*]{z2^}::[z2^* z1^*]::[q2^* q1^*])
rewards "s_id14" true : s_id14; endrewards
// Species s_id15 ([p2^* p1^*]::{p1^}[x2^*]::[x1^* y^*]{z2^}::[z2^* z1^*]::[q2^* q1^*])
rewards "s_id15" true : s_id15; endrewards
// Species s_id16 ([p2^* p1^*]<x2^*>::[x1^* y^*]{z2^}::[z2^* z1^*]::[q2^* q1^*])
rewards "s_id16" true : s_id16; endrewards
// Species s_id17 ([p2^* p1^*]::[x2^*]{x1^}::[x1^* y^*]{z2^}::[z2^* z1^*]::[q2^* q1^*])
rewards "s_id17" true : s_id17; endrewards
// Species s_id18 ([p2^* p1^*]::[x2^* x1^*]::{x1^}[y^*]{z2^}::[z2^* z1^*]::[q2^* q1^*])
rewards "s_id18" true : s_id18; endrewards
// Species s_id19 ([p2^* p1^*]::[x2^* x1^*]<y^*>::[z2^* z1^*]::[q2^* q1^*])
rewards "s_id19" true : s_id19; endrewards
// Species s_id20 ({x1^ y^ z2^})
rewards "s_id20" true : s_id20; endrewards
// Species s_id21 ([p2^* p1^*]::[x2^* x1^*]::{x1^}[y^* z2^*]::{z2^}[z1^*]::[q2^* q1^*])
rewards "s_id21" true : s_id21; endrewards
// Species s_id22 ([p2^* p1^*]::[x2^* x1^*]::{x1^}[y^* z2^*]<z1^*>::[q2^* q1^*])
rewards "s_id22" true : s_id22; endrewards
// Species s_id23 ([p2^* p1^*]::[x2^*]{x1^}::[x1^* y^* z2^*]<z1^*>::[q2^* q1^*])
rewards "s_id23" true : s_id23; endrewards
// Species s_id24 ([p2^* p1^*]<x2^*>::[x1^* y^* z2^*]<z1^*>::[q2^* q1^*])
rewards "s_id24" true : s_id24; endrewards
// Species s_id25 ([p2^* p1^*]<x2^*>::[x1^* y^* z2^*]::{z2^}[z1^*]::[q2^* q1^*])
rewards "s_id25" true : s_id25; endrewards
// Species s_id26 ([p2^* p1^*]::[x2^*]{x1^}::[x1^* y^* z2^*]::{z2^}[z1^*]::[q2^* q1^*])
rewards "s_id26" true : s_id26; endrewards
// Species s_id27 ({p1^ x2^})
rewards "s_id27" true : s_id27; endrewards
// Species s_id28 ([p2^* p1^*]::{p1^}[x2^*]::[x1^* y^* z2^*]<z1^*>::[q2^* q1^*])
rewards "s_id28" true : s_id28; endrewards
// Species s_id29 ([p2^* p1^*]::{p1^}[x2^*]::[x1^* y^* z2^*]::{z2^}[z1^*]::[q2^* q1^*])
rewards "s_id29" true : s_id29; endrewards
// Species s_id30 ({z1^ q2^})
rewards "s_id30" true : s_id30; endrewards
// Species s_id31 ([p2^*]{p1^}::[p1^* x2^*]::[x1^* y^* z2^*]::[z1^*]{q2^}::[q2^* q1^*])
rewards "s_id31" true : s_id31; endrewards
// Species s_id32 ([p2^* p1^*]::{p1^}[x2^*]::[x1^* y^* z2^*]::[z1^*]{q2^}::[q2^* q1^*])
rewards "s_id32" true : s_id32; endrewards
// Species s_id33 ([p2^* p1^*]<x2^*>::[x1^* y^* z2^*]::[z1^*]{q2^}::[q2^* q1^*])
rewards "s_id33" true : s_id33; endrewards
// Species s_id34 ([p2^* p1^*]::[x2^*]{x1^}::[x1^* y^* z2^*]::[z1^*]{q2^}::[q2^* q1^*])
rewards "s_id34" true : s_id34; endrewards
// Species s_id35 ([p2^* p1^*]::[x2^* x1^*]::{x1^}[y^* z2^*]::[z1^*]{q2^}::[q2^* q1^*])
rewards "s_id35" true : s_id35; endrewards
// Species s_id36 ([p2^* p1^*]::[x2^* x1^*]::{x1^}[y^* z2^*]::[z1^* q2^*]::{q2^}[q1^*])
rewards "s_id36" true : s_id36; endrewards
// Species s_id37 ([p2^* p1^*]::[x2^* x1^*]::{x1^}[y^* z2^*]::[z1^* q2^*]<q1^*>)
rewards "s_id37" true : s_id37; endrewards
// Species s_id38 ([p2^* p1^*]::[x2^*]{x1^}::[x1^* y^* z2^*]::[z1^* q2^*]<q1^*>)
rewards "s_id38" true : s_id38; endrewards
// Species s_id39 ([p2^* p1^*]<x2^*>::[x1^* y^* z2^*]::[z1^* q2^*]<q1^*>)
rewards "s_id39" true : s_id39; endrewards
// Species s_id40 ([p2^* p1^*]<x2^*>::[x1^* y^* z2^*]::[z1^* q2^*]::{q2^}[q1^*])
rewards "s_id40" true : s_id40; endrewards
// Species s_id41 ([p2^* p1^*]::[x2^*]{x1^}::[x1^* y^* z2^*]::[z1^* q2^*]::{q2^}[q1^*])
rewards "s_id41" true : s_id41; endrewards
// Species s_id42 ([p2^* p1^*]::{p1^}[x2^*]::[x1^* y^* z2^*]::[z1^* q2^*]::{q2^}[q1^*])
rewards "s_id42" true : s_id42; endrewards
// Species s_id43 ([p2^* p1^*]::{p1^}[x2^*]::[x1^* y^* z2^*]::[z1^* q2^*]<q1^*>)
rewards "s_id43" true : s_id43; endrewards
// Species s_id44 (<y^*>[z2^* r1^]<r2^>)
rewards "s_id44" true : s_id44; endrewards
// Species s_id45 ({x1^}[y^*]{z2^}::[z2^* r1^]<r2^>)
rewards "s_id45" true : s_id45; endrewards
// Species s_id46 ({x1^}[y^* z2^*]::{z2^}[r1^]<r2^>)
rewards "s_id46" true : s_id46; endrewards
// Species s_id47 ({x1^}[y^* z2^*]<r1^ r2^>)
rewards "s_id47" true : s_id47; endrewards
// Species s_id48 ({z2^ r1^*})
rewards "s_id48" true : s_id48; endrewards
// Species s_id49 (<p1^* x2^*>)
rewards "s_id49" true : s_id49; endrewards
// Species s_id50 ([p1^*]<x2^*>{x2^})
rewards "s_id50" true : s_id50; endrewards
// Species s_id51 ([p1^*]{x2^}::{p1^}[x2^*])
rewards "s_id51" true : s_id51; endrewards
// Species s_id52 ({p1^}<p1^*>[x2^*])
rewards "s_id52" true : s_id52; endrewards
// Species s_id53 ([p1^*]<x2^*>:<p1^*>[x2^*])
rewards "s_id53" true : s_id53; endrewards
// Species s_id54 ([p1^* x2^*])
rewards "s_id54" true : s_id54; endrewards
// Species s_id55 (<z1^* q2^*>)
rewards "s_id55" true : s_id55; endrewards
// Species s_id56 ([z1^*]<q2^*>{q2^})
rewards "s_id56" true : s_id56; endrewards
// Species s_id57 ([z1^*]{q2^}::{z1^}[q2^*])
rewards "s_id57" true : s_id57; endrewards
// Species s_id58 ({z1^}<z1^*>[q2^*])
rewards "s_id58" true : s_id58; endrewards
// Species s_id59 ([z1^*]<q2^*>:<z1^*>[q2^*])
rewards "s_id59" true : s_id59; endrewards
// Species s_id60 ([z1^* q2^*])
rewards "s_id60" true : s_id60; endrewards
// Species s_id61 (<z2^* r1^>)
rewards "s_id61" true : s_id61; endrewards
// Species s_id62 ([z2^*]<r1^>{r1^*})
rewards "s_id62" true : s_id62; endrewards
// Species s_id63 ([z2^*]{r1^*}::{z2^}[r1^])
rewards "s_id63" true : s_id63; endrewards
// Species s_id64 ({z2^}<z2^*>[r1^])
rewards "s_id64" true : s_id64; endrewards
// Species s_id65 ([z2^*]<r1^>:<z2^*>[r1^])
rewards "s_id65" true : s_id65; endrewards
// Species s_id66 ([z2^* r1^])
rewards "s_id66" true : s_id66; endrewards

// Reward structure for calculating expected times
rewards "time" true : 1; endrewards

// Formulae identifying inert and reactive single-stranded species
formula strands = s_id0 + s_id1 + s_id2 + s_id3 + s_id20 + s_id27 + s_id30 + s_id48 + s_id49 + s_id55 + s_id61;
//formula strands_inert = ;
formula strands_reactive = s_id0 + s_id1 + s_id2 + s_id3 + s_id20 + s_id27 + s_id30 + s_id48 + s_id49 + s_id55 + s_id61;
formula strands_any = s_id0>0 | s_id1>0 | s_id2>0 | s_id3>0 | s_id20>0 | s_id27>0 | s_id30>0 | s_id48>0 | s_id49>0 | s_id55>0 | s_id61>0;
//formula strands_inert_any = ;
formula strands_reactive_any = s_id0>0 | s_id1>0 | s_id2>0 | s_id3>0 | s_id20>0 | s_id27>0 | s_id30>0 | s_id48>0 | s_id49>0 | s_id55>0 | s_id61>0;

// Formulae identifying inert and reactive double-stranded gate species
formula gates = s_id4 + s_id5 + s_id6 + s_id7 + s_id8 + s_id9 + s_id10 + s_id11 + s_id12 + s_id13 + s_id14 + s_id15 + s_id16 + s_id17 + s_id18 + s_id19 + s_id21 + s_id22 + s_id23 + s_id24 + s_id25 + s_id26 + s_id28 + s_id29 + s_id31 + s_id32 + s_id33 + s_id34 + s_id35 + s_id36 + s_id37 + s_id38 + s_id39 + s_id40 + s_id41 + s_id42 + s_id43 + s_id44 + s_id45 + s_id46 + s_id47 + s_id50 + s_id51 + s_id52 + s_id53 + s_id54 + s_id56 + s_id57 + s_id58 + s_id59 + s_id60 + s_id62 + s_id63 + s_id64 + s_id65 + s_id66;
formula gates_inert = s_id54 + s_id60 + s_id66;
formula gates_reactive = s_id4 + s_id5 + s_id6 + s_id7 + s_id8 + s_id9 + s_id10 + s_id11 + s_id12 + s_id13 + s_id14 + s_id15 + s_id16 + s_id17 + s_id18 + s_id19 + s_id21 + s_id22 + s_id23 + s_id24 + s_id25 + s_id26 + s_id28 + s_id29 + s_id31 + s_id32 + s_id33 + s_id34 + s_id35 + s_id36 + s_id37 + s_id38 + s_id39 + s_id40 + s_id41 + s_id42 + s_id43 + s_id44 + s_id45 + s_id46 + s_id47 + s_id50 + s_id51 + s_id52 + s_id53 + s_id56 + s_id57 + s_id58 + s_id59 + s_id62 + s_id63 + s_id64 + s_id65;
formula gates_any = s_id4>0 | s_id5>0 | s_id6>0 | s_id7>0 | s_id8>0 | s_id9>0 | s_id10>0 | s_id11>0 | s_id12>0 | s_id13>0 | s_id14>0 | s_id15>0 | s_id16>0 | s_id17>0 | s_id18>0 | s_id19>0 | s_id21>0 | s_id22>0 | s_id23>0 | s_id24>0 | s_id25>0 | s_id26>0 | s_id28>0 | s_id29>0 | s_id31>0 | s_id32>0 | s_id33>0 | s_id34>0 | s_id35>0 | s_id36>0 | s_id37>0 | s_id38>0 | s_id39>0 | s_id40>0 | s_id41>0 | s_id42>0 | s_id43>0 | s_id44>0 | s_id45>0 | s_id46>0 | s_id47>0 | s_id50>0 | s_id51>0 | s_id52>0 | s_id53>0 | s_id54>0 | s_id56>0 | s_id57>0 | s_id58>0 | s_id59>0 | s_id60>0 | s_id62>0 | s_id63>0 | s_id64>0 | s_id65>0 | s_id66>0;
formula gates_inert_any = s_id54>0 | s_id60>0 | s_id66>0;
formula gates_reactive_any = s_id4>0 | s_id5>0 | s_id6>0 | s_id7>0 | s_id8>0 | s_id9>0 | s_id10>0 | s_id11>0 | s_id12>0 | s_id13>0 | s_id14>0 | s_id15>0 | s_id16>0 | s_id17>0 | s_id18>0 | s_id19>0 | s_id21>0 | s_id22>0 | s_id23>0 | s_id24>0 | s_id25>0 | s_id26>0 | s_id28>0 | s_id29>0 | s_id31>0 | s_id32>0 | s_id33>0 | s_id34>0 | s_id35>0 | s_id36>0 | s_id37>0 | s_id38>0 | s_id39>0 | s_id40>0 | s_id41>0 | s_id42>0 | s_id43>0 | s_id44>0 | s_id45>0 | s_id46>0 | s_id47>0 | s_id50>0 | s_id51>0 | s_id52>0 | s_id53>0 | s_id56>0 | s_id57>0 | s_id58>0 | s_id59>0 | s_id62>0 | s_id63>0 | s_id64>0 | s_id65>0;

formula free_toeholds = strands_reactive + gates_reactive;
formula active_species =  s_id0 + s_id1 + s_id2 + s_id3 + s_id20 + s_id27 + s_id30 + s_id47 + s_id48 + s_id49 + s_id55 + s_id61;

// Formulae for identifying output species
formula output = s_id47;
formula output_any = output>0;

label "all_done" = output=N & output=free_toeholds;
label "weak_all_done" = output=N & output=active_species;
